{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\new-frontend\\\\src\\\\components\\\\TradePositions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/TradePositions.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TradePositions = () => {\n  _s();\n  const {\n    web3,\n    contracts,\n    account,\n    isInitialized,\n    positions,\n    fetchUserPositions\n  } = useWeb3();\n\n  // State for opening a new position\n  const [positionSize, setPositionSize] = useState('');\n  const [leverage, setLeverage] = useState('1');\n  const [sltp, setSltp] = useState('0');\n  const [reduceOnly, setReduceOnly] = useState(false);\n  const [positionType, setPositionType] = useState('0'); // 0 = LONG, 1 = SHORT\n\n  // State for UI\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('open'); // 'open' or 'positions'\n\n  // Handle opening a new position\n  const handleOpenPosition = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(false);\n\n      // Check if web3 and contracts are initialized\n      if (!web3 || !contracts.marginTradeManager || !account) {\n        throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n      }\n\n      // Validate inputs\n      if (!positionSize || parseFloat(positionSize) <= 0) {\n        throw new Error(\"Position size must be greater than 0\");\n      }\n      if (!leverage || parseInt(leverage) <= 0 || parseInt(leverage) > 100) {\n        throw new Error(\"Leverage must be between 1 and 100\");\n      }\n\n      // Check if user has deposited margin\n      const positionCount = await contracts.marginTradeManager.methods.userPositionCount(account).call();\n      console.log(\"Current position count:\", positionCount);\n      if (parseInt(positionCount) === 0) {\n        throw new Error(\"You need to deposit margin first before opening a position\");\n      }\n\n      // Get the latest position to check margin\n      const latestPositionId = parseInt(positionCount) - 1;\n      const latestPosition = await contracts.marginTradeManager.methods.positions(account, latestPositionId).call();\n      console.log(\"Latest position:\", latestPosition);\n      if (latestPosition.open) {\n        throw new Error(\"You already have an open position. Please close it before opening a new one.\");\n      }\n      if (web3.utils.toBN(latestPosition.margin).isZero()) {\n        throw new Error(\"No margin available. Please deposit margin first.\");\n      }\n\n      // Convert values to proper format\n      const sizeWei = web3.utils.toWei(positionSize, 'ether');\n      const leverageValue = parseInt(leverage);\n      const sltpValue = web3.utils.toWei(sltp, 'ether');\n      const positionTypeValue = parseInt(positionType);\n      console.log(`Opening position: Size=${positionSize}, Leverage=${leverageValue}, SLTP=${sltp}, ReduceOnly=${reduceOnly}, Type=${positionTypeValue === 0 ? 'LONG' : 'SHORT'}`);\n\n      // Call the openPosition function\n      const transaction = await contracts.marginTradeManager.methods.openPosition(sizeWei, leverageValue, sltpValue, reduceOnly, positionTypeValue).send({\n        from: account,\n        gas: 500000 // Set a higher gas limit to ensure transaction doesn't run out of gas\n      });\n      console.log(\"Position opened successfully:\", transaction);\n      setSuccessMessage(`Successfully opened a ${positionTypeValue === 0 ? 'LONG' : 'SHORT'} position with ${positionSize} size and ${leverageValue}x leverage`);\n      setSuccess(true);\n\n      // Add a delay before refreshing to ensure blockchain has updated\n      setTimeout(() => {\n        fetchUserPositions();\n        console.log(\"Refreshing user positions after opening position\");\n      }, 2000);\n\n      // Reset form\n      setPositionSize('');\n      setLeverage('1');\n      setSltp('0');\n      setReduceOnly(false);\n      setPositionType('0');\n\n      // Switch to positions tab\n      setActiveTab('positions');\n    } catch (error) {\n      console.error(\"Error opening position:\", error);\n\n      // Extract the revert reason if available\n      let errorMessage = \"Failed to open position. Please try again.\";\n      if (error.message.includes(\"revert\")) {\n        errorMessage = \"Transaction reverted by the contract. Possible reasons: insufficient margin, invalid parameters, or position already open.\";\n      } else if (error.message.includes(\"gas\")) {\n        errorMessage = \"Transaction failed due to gas issues. Try increasing the gas limit.\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle closing a position\n  const handleClosePosition = async positionId => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(false);\n\n      // Check if web3 and contracts are initialized\n      if (!web3 || !contracts.marginTradeManager || !account) {\n        throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n      }\n      console.log(`Closing position ID: ${positionId}`);\n\n      // Call the closePosition function\n      const transaction = await contracts.marginTradeManager.methods.closePosition(positionId).send({\n        from: account\n      });\n      console.log(\"Position closed successfully:\", transaction);\n      setSuccessMessage(`Successfully closed position #${positionId}`);\n      setSuccess(true);\n\n      // Refresh user position data\n      fetchUserPositions();\n    } catch (error) {\n      console.error(\"Error closing position:\", error);\n      setError(error.message || \"Failed to close position. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle withdrawing margin\n  const handleWithdrawMargin = async positionId => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(false);\n\n      // Check if web3 and contracts are initialized\n      if (!web3 || !contracts.marginTradeManager || !account) {\n        throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n      }\n\n      // Get position details\n      const position = positions.find(p => p.id === positionId);\n      if (!position) {\n        throw new Error(`Position #${positionId} not found`);\n      }\n\n      // Prompt for amount to withdraw\n      const amount = prompt(`Enter amount to withdraw from position #${positionId}. Available margin: ${web3.utils.fromWei(position.margin, 'ether')}`);\n      if (!amount) return;\n      const weiAmount = web3.utils.toWei(amount, 'ether');\n      console.log(`Withdrawing ${amount} from position #${positionId}`);\n\n      // Call the withdrawMargin function\n      const transaction = await contracts.marginTradeManager.methods.withdrawMargin(positionId, weiAmount).send({\n        from: account\n      });\n      console.log(\"Margin withdrawn successfully:\", transaction);\n      setSuccessMessage(`Successfully withdrew ${amount} from position #${positionId}`);\n      setSuccess(true);\n\n      // Refresh user position data\n      fetchUserPositions();\n    } catch (error) {\n      console.error(\"Error withdrawing margin:\", error);\n      setError(error.message || \"Failed to withdraw margin. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Clear success message after 5 seconds\n  React.useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-positions card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'open' ? 'active' : ''}`,\n        onClick: () => setActiveTab('open'),\n        children: \"Open Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'positions' ? 'active' : ''}`,\n        onClick: () => setActiveTab('positions'),\n        children: \"My Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), activeTab === 'open' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"open-position-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Open Trading Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: positionSize,\n          onChange: e => setPositionSize(e.target.value),\n          placeholder: \"Enter position size\",\n          step: \"0.01\",\n          min: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Leverage (1-100x)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: leverage,\n          onChange: e => setLeverage(e.target.value),\n          placeholder: \"Enter leverage\",\n          step: \"1\",\n          min: \"1\",\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stop Loss/Take Profit Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sltp,\n          onChange: e => setSltp(e.target.value),\n          placeholder: \"Enter SLTP (0 if not used)\",\n          step: \"0.01\",\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group checkbox\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: reduceOnly,\n            onChange: e => setReduceOnly(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), \"Reduce Only\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: positionType,\n          onChange: e => setPositionType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"LONG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"SHORT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn primary\",\n        onClick: handleOpenPosition,\n        disabled: loading || !isInitialized || !positionSize || !leverage,\n        children: loading ? \"Processing...\" : \"Open Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Trading Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), positions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-positions\",\n        children: \"You don't have any positions yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positions-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"positions-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Entry Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Leverage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Margin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: positions.map(position => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: position.open ? 'open' : 'closed',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: position.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: position.positionType === '0' ? 'LONG' : 'SHORT'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: web3.utils.fromWei(position.positionSize, 'ether')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: web3.utils.fromWei(position.entryPrice, 'ether')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [position.leverage, \"x\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [web3.utils.fromWei(position.margin, 'ether'), \" \", position.isEth ? 'ETH' : 'Tokens']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: position.open ? 'Open' : 'Closed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: position.open && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn small\",\n                    onClick: () => handleClosePosition(position.id),\n                    disabled: loading,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn small secondary\",\n                    onClick: () => handleWithdrawMargin(position.id),\n                    disabled: loading,\n                    children: \"Withdraw\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 45\n              }, this)]\n            }, position.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }, this), !isInitialized && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"warning-message\",\n      children: \"Please connect your wallet to manage positions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 9\n  }, this);\n};\n_s(TradePositions, \"y1TXxYAyHxP+prMU7X4+sVXP8n4=\", false, function () {\n  return [useWeb3];\n});\n_c = TradePositions;\nexport default TradePositions;\nvar _c;\n$RefreshReg$(_c, \"TradePositions\");","map":{"version":3,"names":["React","useState","useWeb3","jsxDEV","_jsxDEV","Fragment","_Fragment","TradePositions","_s","web3","contracts","account","isInitialized","positions","fetchUserPositions","positionSize","setPositionSize","leverage","setLeverage","sltp","setSltp","reduceOnly","setReduceOnly","positionType","setPositionType","loading","setLoading","error","setError","success","setSuccess","successMessage","setSuccessMessage","activeTab","setActiveTab","handleOpenPosition","marginTradeManager","Error","parseFloat","parseInt","positionCount","methods","userPositionCount","call","console","log","latestPositionId","latestPosition","open","utils","toBN","margin","isZero","sizeWei","toWei","leverageValue","sltpValue","positionTypeValue","transaction","openPosition","send","from","gas","setTimeout","errorMessage","message","includes","handleClosePosition","positionId","closePosition","handleWithdrawMargin","position","find","p","id","amount","prompt","fromWei","weiAmount","withdrawMargin","useEffect","timer","clearTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","step","min","max","checked","disabled","length","map","entryPrice","isEth","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/new-frontend/src/components/TradePositions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/TradePositions.css';\n\nconst TradePositions = () => {\n    const { web3, contracts, account, isInitialized, positions, fetchUserPositions } = useWeb3();\n    \n    // State for opening a new position\n    const [positionSize, setPositionSize] = useState('');\n    const [leverage, setLeverage] = useState('1');\n    const [sltp, setSltp] = useState('0');\n    const [reduceOnly, setReduceOnly] = useState(false);\n    const [positionType, setPositionType] = useState('0'); // 0 = LONG, 1 = SHORT\n    \n    // State for UI\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [activeTab, setActiveTab] = useState('open'); // 'open' or 'positions'\n\n    // Handle opening a new position\n    const handleOpenPosition = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            // Validate inputs\n            if (!positionSize || parseFloat(positionSize) <= 0) {\n                throw new Error(\"Position size must be greater than 0\");\n            }\n\n            if (!leverage || parseInt(leverage) <= 0 || parseInt(leverage) > 100) {\n                throw new Error(\"Leverage must be between 1 and 100\");\n            }\n\n            // Check if user has deposited margin\n            const positionCount = await contracts.marginTradeManager.methods.userPositionCount(account).call();\n            console.log(\"Current position count:\", positionCount);\n            \n            if (parseInt(positionCount) === 0) {\n                throw new Error(\"You need to deposit margin first before opening a position\");\n            }\n\n            // Get the latest position to check margin\n            const latestPositionId = parseInt(positionCount) - 1;\n            const latestPosition = await contracts.marginTradeManager.methods.positions(account, latestPositionId).call();\n            console.log(\"Latest position:\", latestPosition);\n            \n            if (latestPosition.open) {\n                throw new Error(\"You already have an open position. Please close it before opening a new one.\");\n            }\n            \n            if (web3.utils.toBN(latestPosition.margin).isZero()) {\n                throw new Error(\"No margin available. Please deposit margin first.\");\n            }\n\n            // Convert values to proper format\n            const sizeWei = web3.utils.toWei(positionSize, 'ether');\n            const leverageValue = parseInt(leverage);\n            const sltpValue = web3.utils.toWei(sltp, 'ether');\n            const positionTypeValue = parseInt(positionType);\n\n            console.log(`Opening position: Size=${positionSize}, Leverage=${leverageValue}, SLTP=${sltp}, ReduceOnly=${reduceOnly}, Type=${positionTypeValue === 0 ? 'LONG' : 'SHORT'}`);\n\n            // Call the openPosition function\n            const transaction = await contracts.marginTradeManager.methods.openPosition(\n                sizeWei,\n                leverageValue,\n                sltpValue,\n                reduceOnly,\n                positionTypeValue\n            ).send({ \n                from: account,\n                gas: 500000 // Set a higher gas limit to ensure transaction doesn't run out of gas\n            });\n\n            console.log(\"Position opened successfully:\", transaction);\n            setSuccessMessage(`Successfully opened a ${positionTypeValue === 0 ? 'LONG' : 'SHORT'} position with ${positionSize} size and ${leverageValue}x leverage`);\n            setSuccess(true);\n            \n            // Add a delay before refreshing to ensure blockchain has updated\n            setTimeout(() => {\n                fetchUserPositions();\n                console.log(\"Refreshing user positions after opening position\");\n            }, 2000);\n            \n            // Reset form\n            setPositionSize('');\n            setLeverage('1');\n            setSltp('0');\n            setReduceOnly(false);\n            setPositionType('0');\n            \n            // Switch to positions tab\n            setActiveTab('positions');\n        } catch (error) {\n            console.error(\"Error opening position:\", error);\n            \n            // Extract the revert reason if available\n            let errorMessage = \"Failed to open position. Please try again.\";\n            \n            if (error.message.includes(\"revert\")) {\n                errorMessage = \"Transaction reverted by the contract. Possible reasons: insufficient margin, invalid parameters, or position already open.\";\n            } else if (error.message.includes(\"gas\")) {\n                errorMessage = \"Transaction failed due to gas issues. Try increasing the gas limit.\";\n            } else if (error.message) {\n                errorMessage = error.message;\n            }\n            \n            setError(errorMessage);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle closing a position\n    const handleClosePosition = async (positionId) => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            console.log(`Closing position ID: ${positionId}`);\n\n            // Call the closePosition function\n            const transaction = await contracts.marginTradeManager.methods.closePosition(positionId)\n                .send({ from: account });\n\n            console.log(\"Position closed successfully:\", transaction);\n            setSuccessMessage(`Successfully closed position #${positionId}`);\n            setSuccess(true);\n            \n            // Refresh user position data\n            fetchUserPositions();\n        } catch (error) {\n            console.error(\"Error closing position:\", error);\n            setError(error.message || \"Failed to close position. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle withdrawing margin\n    const handleWithdrawMargin = async (positionId) => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            // Get position details\n            const position = positions.find(p => p.id === positionId);\n            if (!position) {\n                throw new Error(`Position #${positionId} not found`);\n            }\n\n            // Prompt for amount to withdraw\n            const amount = prompt(`Enter amount to withdraw from position #${positionId}. Available margin: ${web3.utils.fromWei(position.margin, 'ether')}`);\n            if (!amount) return;\n\n            const weiAmount = web3.utils.toWei(amount, 'ether');\n            console.log(`Withdrawing ${amount} from position #${positionId}`);\n\n            // Call the withdrawMargin function\n            const transaction = await contracts.marginTradeManager.methods.withdrawMargin(\n                positionId,\n                weiAmount\n            ).send({ from: account });\n\n            console.log(\"Margin withdrawn successfully:\", transaction);\n            setSuccessMessage(`Successfully withdrew ${amount} from position #${positionId}`);\n            setSuccess(true);\n            \n            // Refresh user position data\n            fetchUserPositions();\n        } catch (error) {\n            console.error(\"Error withdrawing margin:\", error);\n            setError(error.message || \"Failed to withdraw margin. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Clear success message after 5 seconds\n    React.useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                setSuccess(false);\n            }, 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    return (\n        <div className=\"trade-positions card\">\n            <div className=\"tabs\">\n                <button \n                    className={`tab-button ${activeTab === 'open' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('open')}\n                >\n                    Open Position\n                </button>\n                <button \n                    className={`tab-button ${activeTab === 'positions' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('positions')}\n                >\n                    My Positions\n                </button>\n            </div>\n            \n            {activeTab === 'open' ? (\n                <div className=\"open-position-form\">\n                    <h2>Open Trading Position</h2>\n                    \n                    <div className=\"input-group\">\n                        <label>Position Size</label>\n                        <input\n                            type=\"number\"\n                            value={positionSize}\n                            onChange={(e) => setPositionSize(e.target.value)}\n                            placeholder=\"Enter position size\"\n                            step=\"0.01\"\n                            min=\"0.01\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Leverage (1-100x)</label>\n                        <input\n                            type=\"number\"\n                            value={leverage}\n                            onChange={(e) => setLeverage(e.target.value)}\n                            placeholder=\"Enter leverage\"\n                            step=\"1\"\n                            min=\"1\"\n                            max=\"100\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Stop Loss/Take Profit Level</label>\n                        <input\n                            type=\"number\"\n                            value={sltp}\n                            onChange={(e) => setSltp(e.target.value)}\n                            placeholder=\"Enter SLTP (0 if not used)\"\n                            step=\"0.01\"\n                            min=\"0\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group checkbox\">\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                checked={reduceOnly}\n                                onChange={(e) => setReduceOnly(e.target.checked)}\n                            />\n                            Reduce Only\n                        </label>\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Position Type</label>\n                        <select\n                            value={positionType}\n                            onChange={(e) => setPositionType(e.target.value)}\n                        >\n                            <option value=\"0\">LONG</option>\n                            <option value=\"1\">SHORT</option>\n                        </select>\n                    </div>\n                    \n                    <button\n                        className=\"btn primary\"\n                        onClick={handleOpenPosition}\n                        disabled={loading || !isInitialized || !positionSize || !leverage}\n                    >\n                        {loading ? \"Processing...\" : \"Open Position\"}\n                    </button>\n                </div>\n            ) : (\n                <div className=\"positions-list\">\n                    <h2>My Trading Positions</h2>\n                    \n                    {positions.length === 0 ? (\n                        <p className=\"no-positions\">You don't have any positions yet.</p>\n                    ) : (\n                        <div className=\"positions-table-container\">\n                            <table className=\"positions-table\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Type</th>\n                                        <th>Size</th>\n                                        <th>Entry Price</th>\n                                        <th>Leverage</th>\n                                        <th>Margin</th>\n                                        <th>Status</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {positions.map((position) => (\n                                        <tr key={position.id} className={position.open ? 'open' : 'closed'}>\n                                            <td>{position.id}</td>\n                                            <td>{position.positionType === '0' ? 'LONG' : 'SHORT'}</td>\n                                            <td>{web3.utils.fromWei(position.positionSize, 'ether')}</td>\n                                            <td>{web3.utils.fromWei(position.entryPrice, 'ether')}</td>\n                                            <td>{position.leverage}x</td>\n                                            <td>{web3.utils.fromWei(position.margin, 'ether')} {position.isEth ? 'ETH' : 'Tokens'}</td>\n                                            <td>{position.open ? 'Open' : 'Closed'}</td>\n                                            <td>\n                                                {position.open && (\n                                                    <>\n                                                        <button\n                                                            className=\"btn small\"\n                                                            onClick={() => handleClosePosition(position.id)}\n                                                            disabled={loading}\n                                                        >\n                                                            Close\n                                                        </button>\n                                                        <button\n                                                            className=\"btn small secondary\"\n                                                            onClick={() => handleWithdrawMargin(position.id)}\n                                                            disabled={loading}\n                                                        >\n                                                            Withdraw\n                                                        </button>\n                                                    </>\n                                                )}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            )}\n            \n            {error && <p className=\"error-message\">{error}</p>}\n            {success && <p className=\"success-message\">{successMessage}</p>}\n            \n            {!isInitialized && (\n                <p className=\"warning-message\">Please connect your wallet to manage positions.</p>\n            )}\n        </div>\n    );\n};\n\nexport default TradePositions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAEC,aAAa;IAAEC,SAAS;IAAEC;EAAmB,CAAC,GAAGZ,OAAO,CAAC,CAAC;;EAE5F;EACA,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMkC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACAT,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdE,UAAU,CAAC,KAAK,CAAC;;MAEjB;MACA,IAAI,CAACrB,IAAI,IAAI,CAACC,SAAS,CAAC0B,kBAAkB,IAAI,CAACzB,OAAO,EAAE;QACpD,MAAM,IAAI0B,KAAK,CAAC,gEAAgE,CAAC;MACrF;;MAEA;MACA,IAAI,CAACtB,YAAY,IAAIuB,UAAU,CAACvB,YAAY,CAAC,IAAI,CAAC,EAAE;QAChD,MAAM,IAAIsB,KAAK,CAAC,sCAAsC,CAAC;MAC3D;MAEA,IAAI,CAACpB,QAAQ,IAAIsB,QAAQ,CAACtB,QAAQ,CAAC,IAAI,CAAC,IAAIsB,QAAQ,CAACtB,QAAQ,CAAC,GAAG,GAAG,EAAE;QAClE,MAAM,IAAIoB,KAAK,CAAC,oCAAoC,CAAC;MACzD;;MAEA;MACA,MAAMG,aAAa,GAAG,MAAM9B,SAAS,CAAC0B,kBAAkB,CAACK,OAAO,CAACC,iBAAiB,CAAC/B,OAAO,CAAC,CAACgC,IAAI,CAAC,CAAC;MAClGC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,aAAa,CAAC;MAErD,IAAID,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAIH,KAAK,CAAC,4DAA4D,CAAC;MACjF;;MAEA;MACA,MAAMS,gBAAgB,GAAGP,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACpD,MAAMO,cAAc,GAAG,MAAMrC,SAAS,CAAC0B,kBAAkB,CAACK,OAAO,CAAC5B,SAAS,CAACF,OAAO,EAAEmC,gBAAgB,CAAC,CAACH,IAAI,CAAC,CAAC;MAC7GC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,cAAc,CAAC;MAE/C,IAAIA,cAAc,CAACC,IAAI,EAAE;QACrB,MAAM,IAAIX,KAAK,CAAC,8EAA8E,CAAC;MACnG;MAEA,IAAI5B,IAAI,CAACwC,KAAK,CAACC,IAAI,CAACH,cAAc,CAACI,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE;QACjD,MAAM,IAAIf,KAAK,CAAC,mDAAmD,CAAC;MACxE;;MAEA;MACA,MAAMgB,OAAO,GAAG5C,IAAI,CAACwC,KAAK,CAACK,KAAK,CAACvC,YAAY,EAAE,OAAO,CAAC;MACvD,MAAMwC,aAAa,GAAGhB,QAAQ,CAACtB,QAAQ,CAAC;MACxC,MAAMuC,SAAS,GAAG/C,IAAI,CAACwC,KAAK,CAACK,KAAK,CAACnC,IAAI,EAAE,OAAO,CAAC;MACjD,MAAMsC,iBAAiB,GAAGlB,QAAQ,CAAChB,YAAY,CAAC;MAEhDqB,OAAO,CAACC,GAAG,CAAC,0BAA0B9B,YAAY,cAAcwC,aAAa,UAAUpC,IAAI,gBAAgBE,UAAU,UAAUoC,iBAAiB,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,EAAE,CAAC;;MAE5K;MACA,MAAMC,WAAW,GAAG,MAAMhD,SAAS,CAAC0B,kBAAkB,CAACK,OAAO,CAACkB,YAAY,CACvEN,OAAO,EACPE,aAAa,EACbC,SAAS,EACTnC,UAAU,EACVoC,iBACJ,CAAC,CAACG,IAAI,CAAC;QACHC,IAAI,EAAElD,OAAO;QACbmD,GAAG,EAAE,MAAM,CAAC;MAChB,CAAC,CAAC;MAEFlB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEa,WAAW,CAAC;MACzD1B,iBAAiB,CAAC,yBAAyByB,iBAAiB,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,kBAAkB1C,YAAY,aAAawC,aAAa,YAAY,CAAC;MAC1JzB,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACAiC,UAAU,CAAC,MAAM;QACbjD,kBAAkB,CAAC,CAAC;QACpB8B,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MACnE,CAAC,EAAE,IAAI,CAAC;;MAER;MACA7B,eAAe,CAAC,EAAE,CAAC;MACnBE,WAAW,CAAC,GAAG,CAAC;MAChBE,OAAO,CAAC,GAAG,CAAC;MACZE,aAAa,CAAC,KAAK,CAAC;MACpBE,eAAe,CAAC,GAAG,CAAC;;MAEpB;MACAU,YAAY,CAAC,WAAW,CAAC;IAC7B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;;MAE/C;MACA,IAAIqC,YAAY,GAAG,4CAA4C;MAE/D,IAAIrC,KAAK,CAACsC,OAAO,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAClCF,YAAY,GAAG,4HAA4H;MAC/I,CAAC,MAAM,IAAIrC,KAAK,CAACsC,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;QACtCF,YAAY,GAAG,qEAAqE;MACxF,CAAC,MAAM,IAAIrC,KAAK,CAACsC,OAAO,EAAE;QACtBD,YAAY,GAAGrC,KAAK,CAACsC,OAAO;MAChC;MAEArC,QAAQ,CAACoC,YAAY,CAAC;IAC1B,CAAC,SAAS;MACNtC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAMyC,mBAAmB,GAAG,MAAOC,UAAU,IAAK;IAC9C,IAAI;MACA1C,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdE,UAAU,CAAC,KAAK,CAAC;;MAEjB;MACA,IAAI,CAACrB,IAAI,IAAI,CAACC,SAAS,CAAC0B,kBAAkB,IAAI,CAACzB,OAAO,EAAE;QACpD,MAAM,IAAI0B,KAAK,CAAC,gEAAgE,CAAC;MACrF;MAEAO,OAAO,CAACC,GAAG,CAAC,wBAAwBuB,UAAU,EAAE,CAAC;;MAEjD;MACA,MAAMV,WAAW,GAAG,MAAMhD,SAAS,CAAC0B,kBAAkB,CAACK,OAAO,CAAC4B,aAAa,CAACD,UAAU,CAAC,CACnFR,IAAI,CAAC;QAAEC,IAAI,EAAElD;MAAQ,CAAC,CAAC;MAE5BiC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEa,WAAW,CAAC;MACzD1B,iBAAiB,CAAC,iCAAiCoC,UAAU,EAAE,CAAC;MAChEtC,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACAhB,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAACD,KAAK,CAACsC,OAAO,IAAI,6CAA6C,CAAC;IAC5E,CAAC,SAAS;MACNvC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAM4C,oBAAoB,GAAG,MAAOF,UAAU,IAAK;IAC/C,IAAI;MACA1C,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdE,UAAU,CAAC,KAAK,CAAC;;MAEjB;MACA,IAAI,CAACrB,IAAI,IAAI,CAACC,SAAS,CAAC0B,kBAAkB,IAAI,CAACzB,OAAO,EAAE;QACpD,MAAM,IAAI0B,KAAK,CAAC,gEAAgE,CAAC;MACrF;;MAEA;MACA,MAAMkC,QAAQ,GAAG1D,SAAS,CAAC2D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,UAAU,CAAC;MACzD,IAAI,CAACG,QAAQ,EAAE;QACX,MAAM,IAAIlC,KAAK,CAAC,aAAa+B,UAAU,YAAY,CAAC;MACxD;;MAEA;MACA,MAAMO,MAAM,GAAGC,MAAM,CAAC,2CAA2CR,UAAU,uBAAuB3D,IAAI,CAACwC,KAAK,CAAC4B,OAAO,CAACN,QAAQ,CAACpB,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC;MACjJ,IAAI,CAACwB,MAAM,EAAE;MAEb,MAAMG,SAAS,GAAGrE,IAAI,CAACwC,KAAK,CAACK,KAAK,CAACqB,MAAM,EAAE,OAAO,CAAC;MACnD/B,OAAO,CAACC,GAAG,CAAC,eAAe8B,MAAM,mBAAmBP,UAAU,EAAE,CAAC;;MAEjE;MACA,MAAMV,WAAW,GAAG,MAAMhD,SAAS,CAAC0B,kBAAkB,CAACK,OAAO,CAACsC,cAAc,CACzEX,UAAU,EACVU,SACJ,CAAC,CAAClB,IAAI,CAAC;QAAEC,IAAI,EAAElD;MAAQ,CAAC,CAAC;MAEzBiC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEa,WAAW,CAAC;MAC1D1B,iBAAiB,CAAC,yBAAyB2C,MAAM,mBAAmBP,UAAU,EAAE,CAAC;MACjFtC,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACAhB,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAACD,KAAK,CAACsC,OAAO,IAAI,8CAA8C,CAAC;IAC7E,CAAC,SAAS;MACNvC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACA1B,KAAK,CAACgF,SAAS,CAAC,MAAM;IAClB,IAAInD,OAAO,EAAE;MACT,MAAMoD,KAAK,GAAGlB,UAAU,CAAC,MAAM;QAC3BjC,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMoD,YAAY,CAACD,KAAK,CAAC;IACpC;EACJ,CAAC,EAAE,CAACpD,OAAO,CAAC,CAAC;EAEb,oBACIzB,OAAA;IAAK+E,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjChF,OAAA;MAAK+E,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBhF,OAAA;QACI+E,SAAS,EAAE,cAAclD,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QAChEoD,OAAO,EAAEA,CAAA,KAAMnD,YAAY,CAAC,MAAM,CAAE;QAAAkD,QAAA,EACvC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrF,OAAA;QACI+E,SAAS,EAAE,cAAclD,SAAS,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;QACrEoD,OAAO,EAAEA,CAAA,KAAMnD,YAAY,CAAC,WAAW,CAAE;QAAAkD,QAAA,EAC5C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELxD,SAAS,KAAK,MAAM,gBACjB7B,OAAA;MAAK+E,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BhF,OAAA;QAAAgF,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE9BrF,OAAA;QAAK+E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBhF,OAAA;UAAAgF,QAAA,EAAO;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BrF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE5E,YAAa;UACpB6E,QAAQ,EAAGC,CAAC,IAAK7E,eAAe,CAAC6E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACjDI,WAAW,EAAC,qBAAqB;UACjCC,IAAI,EAAC,MAAM;UACXC,GAAG,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENrF,OAAA;QAAK+E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBhF,OAAA;UAAAgF,QAAA,EAAO;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCrF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE1E,QAAS;UAChB2E,QAAQ,EAAGC,CAAC,IAAK3E,WAAW,CAAC2E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,WAAW,EAAC,gBAAgB;UAC5BC,IAAI,EAAC,GAAG;UACRC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENrF,OAAA;QAAK+E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBhF,OAAA;UAAAgF,QAAA,EAAO;QAA2B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CrF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAExE,IAAK;UACZyE,QAAQ,EAAGC,CAAC,IAAKzE,OAAO,CAACyE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC,4BAA4B;UACxCC,IAAI,EAAC,MAAM;UACXC,GAAG,EAAC;QAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENrF,OAAA;QAAK+E,SAAS,EAAC,sBAAsB;QAAAC,QAAA,eACjChF,OAAA;UAAAgF,QAAA,gBACIhF,OAAA;YACIsF,IAAI,EAAC,UAAU;YACfS,OAAO,EAAE9E,UAAW;YACpBuE,QAAQ,EAAGC,CAAC,IAAKvE,aAAa,CAACuE,CAAC,CAACC,MAAM,CAACK,OAAO;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eAEN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAENrF,OAAA;QAAK+E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBhF,OAAA;UAAAgF,QAAA,EAAO;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BrF,OAAA;UACIuF,KAAK,EAAEpE,YAAa;UACpBqE,QAAQ,EAAGC,CAAC,IAAKrE,eAAe,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,gBAEjDhF,OAAA;YAAQuF,KAAK,EAAC,GAAG;YAAAP,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/BrF,OAAA;YAAQuF,KAAK,EAAC,GAAG;YAAAP,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAENrF,OAAA;QACI+E,SAAS,EAAC,aAAa;QACvBE,OAAO,EAAElD,kBAAmB;QAC5BiE,QAAQ,EAAE3E,OAAO,IAAI,CAACb,aAAa,IAAI,CAACG,YAAY,IAAI,CAACE,QAAS;QAAAmE,QAAA,EAEjE3D,OAAO,GAAG,eAAe,GAAG;MAAe;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,gBAENrF,OAAA;MAAK+E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BhF,OAAA;QAAAgF,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE5B5E,SAAS,CAACwF,MAAM,KAAK,CAAC,gBACnBjG,OAAA;QAAG+E,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAiC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjErF,OAAA;QAAK+E,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACtChF,OAAA;UAAO+E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BhF,OAAA;YAAAgF,QAAA,eACIhF,OAAA;cAAAgF,QAAA,gBACIhF,OAAA;gBAAAgF,QAAA,EAAI;cAAE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXrF,OAAA;gBAAAgF,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrF,OAAA;gBAAAgF,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbrF,OAAA;gBAAAgF,QAAA,EAAI;cAAW;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBrF,OAAA;gBAAAgF,QAAA,EAAI;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBrF,OAAA;gBAAAgF,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrF,OAAA;gBAAAgF,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfrF,OAAA;gBAAAgF,QAAA,EAAI;cAAO;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRrF,OAAA;YAAAgF,QAAA,EACKvE,SAAS,CAACyF,GAAG,CAAE/B,QAAQ,iBACpBnE,OAAA;cAAsB+E,SAAS,EAAEZ,QAAQ,CAACvB,IAAI,GAAG,MAAM,GAAG,QAAS;cAAAoC,QAAA,gBAC/DhF,OAAA;gBAAAgF,QAAA,EAAKb,QAAQ,CAACG;cAAE;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtBrF,OAAA;gBAAAgF,QAAA,EAAKb,QAAQ,CAAChD,YAAY,KAAK,GAAG,GAAG,MAAM,GAAG;cAAO;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3DrF,OAAA;gBAAAgF,QAAA,EAAK3E,IAAI,CAACwC,KAAK,CAAC4B,OAAO,CAACN,QAAQ,CAACxD,YAAY,EAAE,OAAO;cAAC;gBAAAuE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7DrF,OAAA;gBAAAgF,QAAA,EAAK3E,IAAI,CAACwC,KAAK,CAAC4B,OAAO,CAACN,QAAQ,CAACgC,UAAU,EAAE,OAAO;cAAC;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3DrF,OAAA;gBAAAgF,QAAA,GAAKb,QAAQ,CAACtD,QAAQ,EAAC,GAAC;cAAA;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7BrF,OAAA;gBAAAgF,QAAA,GAAK3E,IAAI,CAACwC,KAAK,CAAC4B,OAAO,CAACN,QAAQ,CAACpB,MAAM,EAAE,OAAO,CAAC,EAAC,GAAC,EAACoB,QAAQ,CAACiC,KAAK,GAAG,KAAK,GAAG,QAAQ;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3FrF,OAAA;gBAAAgF,QAAA,EAAKb,QAAQ,CAACvB,IAAI,GAAG,MAAM,GAAG;cAAQ;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5CrF,OAAA;gBAAAgF,QAAA,EACKb,QAAQ,CAACvB,IAAI,iBACV5C,OAAA,CAAAE,SAAA;kBAAA8E,QAAA,gBACIhF,OAAA;oBACI+E,SAAS,EAAC,WAAW;oBACrBE,OAAO,EAAEA,CAAA,KAAMlB,mBAAmB,CAACI,QAAQ,CAACG,EAAE,CAAE;oBAChD0B,QAAQ,EAAE3E,OAAQ;oBAAA2D,QAAA,EACrB;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTrF,OAAA;oBACI+E,SAAS,EAAC,qBAAqB;oBAC/BE,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACC,QAAQ,CAACG,EAAE,CAAE;oBACjD0B,QAAQ,EAAE3E,OAAQ;oBAAA2D,QAAA,EACrB;kBAED;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,eACX;cACL;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GA3BAlB,QAAQ,CAACG,EAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4BhB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,EAEA9D,KAAK,iBAAIvB,OAAA;MAAG+E,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEzD;IAAK;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjD5D,OAAO,iBAAIzB,OAAA;MAAG+E,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAErD;IAAc;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE9D,CAAC7E,aAAa,iBACXR,OAAA;MAAG+E,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAA+C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjF,EAAA,CAzWID,cAAc;EAAA,QACmEL,OAAO;AAAA;AAAAuG,EAAA,GADxFlG,cAAc;AA2WpB,eAAeA,cAAc;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}