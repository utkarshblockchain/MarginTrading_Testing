{"ast":null,"code":"import React,{useState}from'react';import{useWeb3}from'../context/Web3Context';import'../styles/TradePositions.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TradePositions=()=>{const{web3,contracts,account,isInitialized,positions,fetchUserPositions}=useWeb3();// State for opening a new position\nconst[positionSize,setPositionSize]=useState('');const[leverage,setLeverage]=useState('1');const[sltp,setSltp]=useState('0');const[reduceOnly,setReduceOnly]=useState(false);const[positionType,setPositionType]=useState('0');// 0 = LONG, 1 = SHORT\n// State for UI\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(false);const[successMessage,setSuccessMessage]=useState('');const[activeTab,setActiveTab]=useState('open');// 'open' or 'positions'\n// Handle opening a new position\nconst handleOpenPosition=async()=>{try{setLoading(true);setError(null);setSuccess(false);// Check if web3 and contracts are initialized\nif(!web3||!contracts.marginTradeManager||!account){throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");}// Validate inputs\nif(!positionSize||parseFloat(positionSize)<=0){throw new Error(\"Position size must be greater than 0\");}if(!leverage||parseInt(leverage)<=0||parseInt(leverage)>100){throw new Error(\"Leverage must be between 1 and 100\");}// Check if user has deposited margin\nconst positionCount=await contracts.marginTradeManager.methods.userPositionCount(account).call();console.log(\"Current position count:\",positionCount);if(parseInt(positionCount)===0){throw new Error(\"You need to deposit margin first before opening a position\");}// Get the latest position to check margin\nconst latestPositionId=parseInt(positionCount)-1;const latestPosition=await contracts.marginTradeManager.methods.positions(account,latestPositionId).call();console.log(\"Latest position:\",latestPosition);if(latestPosition.open){throw new Error(\"You already have an open position. Please close it before opening a new one.\");}if(web3.utils.toBN(latestPosition.margin).isZero()){throw new Error(\"No margin available. Please deposit margin first.\");}// Convert values to proper format\nconst sizeWei=web3.utils.toWei(positionSize,'ether');const leverageValue=parseInt(leverage);const sltpValue=web3.utils.toWei(sltp,'ether');const positionTypeValue=parseInt(positionType);console.log(`Opening position: Size=${positionSize}, Leverage=${leverageValue}, SLTP=${sltp}, ReduceOnly=${reduceOnly}, Type=${positionTypeValue===0?'LONG':'SHORT'}`);// Call the openPosition function\nconst transaction=await contracts.marginTradeManager.methods.openPosition(sizeWei,leverageValue,sltpValue,reduceOnly,positionTypeValue).send({from:account,gas:500000// Set a higher gas limit to ensure transaction doesn't run out of gas\n});console.log(\"Position opened successfully:\",transaction);setSuccessMessage(`Successfully opened a ${positionTypeValue===0?'LONG':'SHORT'} position with ${positionSize} size and ${leverageValue}x leverage`);setSuccess(true);// Add a delay before refreshing to ensure blockchain has updated\nsetTimeout(()=>{fetchUserPositions();console.log(\"Refreshing user positions after opening position\");},2000);// Reset form\nsetPositionSize('');setLeverage('1');setSltp('0');setReduceOnly(false);setPositionType('0');// Switch to positions tab\nsetActiveTab('positions');}catch(error){console.error(\"Error opening position:\",error);// Extract the revert reason if available\nlet errorMessage=\"Failed to open position. Please try again.\";if(error.message.includes(\"revert\")){errorMessage=\"Transaction reverted by the contract. Possible reasons: insufficient margin, invalid parameters, or position already open.\";}else if(error.message.includes(\"gas\")){errorMessage=\"Transaction failed due to gas issues. Try increasing the gas limit.\";}else if(error.message){errorMessage=error.message;}setError(errorMessage);}finally{setLoading(false);}};// Handle closing a position\nconst handleClosePosition=async positionId=>{try{setLoading(true);setError(null);setSuccess(false);// Check if web3 and contracts are initialized\nif(!web3||!contracts.marginTradeManager||!account){throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");}console.log(`Closing position ID: ${positionId}`);// Call the closePosition function\nconst transaction=await contracts.marginTradeManager.methods.closePosition(positionId).send({from:account});console.log(\"Position closed successfully:\",transaction);setSuccessMessage(`Successfully closed position #${positionId}`);setSuccess(true);// Refresh user position data\nfetchUserPositions();}catch(error){console.error(\"Error closing position:\",error);setError(error.message||\"Failed to close position. Please try again.\");}finally{setLoading(false);}};// Handle withdrawing margin\nconst handleWithdrawMargin=async positionId=>{try{setLoading(true);setError(null);setSuccess(false);// Check if web3 and contracts are initialized\nif(!web3||!contracts.marginTradeManager||!account){throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");}// Get position details\nconst position=positions.find(p=>p.id===positionId);if(!position){throw new Error(`Position #${positionId} not found`);}// Prompt for amount to withdraw\nconst amount=prompt(`Enter amount to withdraw from position #${positionId}. Available margin: ${web3.utils.fromWei(position.margin,'ether')}`);if(!amount)return;const weiAmount=web3.utils.toWei(amount,'ether');console.log(`Withdrawing ${amount} from position #${positionId}`);// Call the withdrawMargin function\nconst transaction=await contracts.marginTradeManager.methods.withdrawMargin(positionId,weiAmount).send({from:account});console.log(\"Margin withdrawn successfully:\",transaction);setSuccessMessage(`Successfully withdrew ${amount} from position #${positionId}`);setSuccess(true);// Refresh user position data\nfetchUserPositions();}catch(error){console.error(\"Error withdrawing margin:\",error);setError(error.message||\"Failed to withdraw margin. Please try again.\");}finally{setLoading(false);}};// Clear success message after 5 seconds\nReact.useEffect(()=>{if(success){const timer=setTimeout(()=>{setSuccess(false);},5000);return()=>clearTimeout(timer);}},[success]);return/*#__PURE__*/_jsxs(\"div\",{className:\"trade-positions card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='open'?'active':''}`,onClick:()=>setActiveTab('open'),children:\"Open Position\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='positions'?'active':''}`,onClick:()=>setActiveTab('positions'),children:\"My Positions\"})]}),activeTab==='open'?/*#__PURE__*/_jsxs(\"div\",{className:\"open-position-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Open Trading Position\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Position Size\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:positionSize,onChange:e=>setPositionSize(e.target.value),placeholder:\"Enter position size\",step:\"0.01\",min:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Leverage (1-100x)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:leverage,onChange:e=>setLeverage(e.target.value),placeholder:\"Enter leverage\",step:\"1\",min:\"1\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Stop Loss/Take Profit Level\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:sltp,onChange:e=>setSltp(e.target.value),placeholder:\"Enter SLTP (0 if not used)\",step:\"0.01\",min:\"0\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group checkbox\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:reduceOnly,onChange:e=>setReduceOnly(e.target.checked)}),\"Reduce Only\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Position Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:positionType,onChange:e=>setPositionType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"LONG\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"SHORT\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn primary\",onClick:handleOpenPosition,disabled:loading||!isInitialized||!positionSize||!leverage,children:loading?\"Processing...\":\"Open Position\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"positions-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Trading Positions\"}),positions.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-positions\",children:\"You don't have any positions yet.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"positions-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"positions-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Entry Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Leverage\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Margin\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:positions.map(position=>/*#__PURE__*/_jsxs(\"tr\",{className:position.open?'open':'closed',children:[/*#__PURE__*/_jsx(\"td\",{children:position.id}),/*#__PURE__*/_jsx(\"td\",{children:position.positionType==='0'?'LONG':'SHORT'}),/*#__PURE__*/_jsx(\"td\",{children:web3.utils.fromWei(position.positionSize,'ether')}),/*#__PURE__*/_jsx(\"td\",{children:web3.utils.fromWei(position.entryPrice,'ether')}),/*#__PURE__*/_jsxs(\"td\",{children:[position.leverage,\"x\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[web3.utils.fromWei(position.margin,'ether'),\" \",position.isEth?'ETH':'Tokens']}),/*#__PURE__*/_jsx(\"td\",{children:position.open?'Open':'Closed'}),/*#__PURE__*/_jsx(\"td\",{children:position.open&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn small\",onClick:()=>handleClosePosition(position.id),disabled:loading,children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn small secondary\",onClick:()=>handleWithdrawMargin(position.id),disabled:loading,children:\"Withdraw\"})]})})]},position.id))})]})})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage}),!isInitialized&&/*#__PURE__*/_jsx(\"p\",{className:\"warning-message\",children:\"Please connect your wallet to manage positions.\"})]});};export default TradePositions;","map":{"version":3,"names":["React","useState","useWeb3","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TradePositions","web3","contracts","account","isInitialized","positions","fetchUserPositions","positionSize","setPositionSize","leverage","setLeverage","sltp","setSltp","reduceOnly","setReduceOnly","positionType","setPositionType","loading","setLoading","error","setError","success","setSuccess","successMessage","setSuccessMessage","activeTab","setActiveTab","handleOpenPosition","marginTradeManager","Error","parseFloat","parseInt","positionCount","methods","userPositionCount","call","console","log","latestPositionId","latestPosition","open","utils","toBN","margin","isZero","sizeWei","toWei","leverageValue","sltpValue","positionTypeValue","transaction","openPosition","send","from","gas","setTimeout","errorMessage","message","includes","handleClosePosition","positionId","closePosition","handleWithdrawMargin","position","find","p","id","amount","prompt","fromWei","weiAmount","withdrawMargin","useEffect","timer","clearTimeout","className","children","onClick","type","value","onChange","e","target","placeholder","step","min","max","checked","disabled","length","map","entryPrice","isEth"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/new-frontend/src/components/TradePositions.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/TradePositions.css';\n\nconst TradePositions = () => {\n    const { web3, contracts, account, isInitialized, positions, fetchUserPositions } = useWeb3();\n    \n    // State for opening a new position\n    const [positionSize, setPositionSize] = useState('');\n    const [leverage, setLeverage] = useState('1');\n    const [sltp, setSltp] = useState('0');\n    const [reduceOnly, setReduceOnly] = useState(false);\n    const [positionType, setPositionType] = useState('0'); // 0 = LONG, 1 = SHORT\n    \n    // State for UI\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [activeTab, setActiveTab] = useState('open'); // 'open' or 'positions'\n\n    // Handle opening a new position\n    const handleOpenPosition = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            // Validate inputs\n            if (!positionSize || parseFloat(positionSize) <= 0) {\n                throw new Error(\"Position size must be greater than 0\");\n            }\n\n            if (!leverage || parseInt(leverage) <= 0 || parseInt(leverage) > 100) {\n                throw new Error(\"Leverage must be between 1 and 100\");\n            }\n\n            // Check if user has deposited margin\n            const positionCount = await contracts.marginTradeManager.methods.userPositionCount(account).call();\n            console.log(\"Current position count:\", positionCount);\n            \n            if (parseInt(positionCount) === 0) {\n                throw new Error(\"You need to deposit margin first before opening a position\");\n            }\n\n            // Get the latest position to check margin\n            const latestPositionId = parseInt(positionCount) - 1;\n            const latestPosition = await contracts.marginTradeManager.methods.positions(account, latestPositionId).call();\n            console.log(\"Latest position:\", latestPosition);\n            \n            if (latestPosition.open) {\n                throw new Error(\"You already have an open position. Please close it before opening a new one.\");\n            }\n            \n            if (web3.utils.toBN(latestPosition.margin).isZero()) {\n                throw new Error(\"No margin available. Please deposit margin first.\");\n            }\n\n            // Convert values to proper format\n            const sizeWei = web3.utils.toWei(positionSize, 'ether');\n            const leverageValue = parseInt(leverage);\n            const sltpValue = web3.utils.toWei(sltp, 'ether');\n            const positionTypeValue = parseInt(positionType);\n\n            console.log(`Opening position: Size=${positionSize}, Leverage=${leverageValue}, SLTP=${sltp}, ReduceOnly=${reduceOnly}, Type=${positionTypeValue === 0 ? 'LONG' : 'SHORT'}`);\n\n            // Call the openPosition function\n            const transaction = await contracts.marginTradeManager.methods.openPosition(\n                sizeWei,\n                leverageValue,\n                sltpValue,\n                reduceOnly,\n                positionTypeValue\n            ).send({ \n                from: account,\n                gas: 500000 // Set a higher gas limit to ensure transaction doesn't run out of gas\n            });\n\n            console.log(\"Position opened successfully:\", transaction);\n            setSuccessMessage(`Successfully opened a ${positionTypeValue === 0 ? 'LONG' : 'SHORT'} position with ${positionSize} size and ${leverageValue}x leverage`);\n            setSuccess(true);\n            \n            // Add a delay before refreshing to ensure blockchain has updated\n            setTimeout(() => {\n                fetchUserPositions();\n                console.log(\"Refreshing user positions after opening position\");\n            }, 2000);\n            \n            // Reset form\n            setPositionSize('');\n            setLeverage('1');\n            setSltp('0');\n            setReduceOnly(false);\n            setPositionType('0');\n            \n            // Switch to positions tab\n            setActiveTab('positions');\n        } catch (error) {\n            console.error(\"Error opening position:\", error);\n            \n            // Extract the revert reason if available\n            let errorMessage = \"Failed to open position. Please try again.\";\n            \n            if (error.message.includes(\"revert\")) {\n                errorMessage = \"Transaction reverted by the contract. Possible reasons: insufficient margin, invalid parameters, or position already open.\";\n            } else if (error.message.includes(\"gas\")) {\n                errorMessage = \"Transaction failed due to gas issues. Try increasing the gas limit.\";\n            } else if (error.message) {\n                errorMessage = error.message;\n            }\n            \n            setError(errorMessage);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle closing a position\n    const handleClosePosition = async (positionId) => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            console.log(`Closing position ID: ${positionId}`);\n\n            // Call the closePosition function\n            const transaction = await contracts.marginTradeManager.methods.closePosition(positionId)\n                .send({ from: account });\n\n            console.log(\"Position closed successfully:\", transaction);\n            setSuccessMessage(`Successfully closed position #${positionId}`);\n            setSuccess(true);\n            \n            // Refresh user position data\n            fetchUserPositions();\n        } catch (error) {\n            console.error(\"Error closing position:\", error);\n            setError(error.message || \"Failed to close position. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle withdrawing margin\n    const handleWithdrawMargin = async (positionId) => {\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(false);\n\n            // Check if web3 and contracts are initialized\n            if (!web3 || !contracts.marginTradeManager || !account) {\n                throw new Error(\"Web3 or contracts not initialized. Please connect your wallet.\");\n            }\n\n            // Get position details\n            const position = positions.find(p => p.id === positionId);\n            if (!position) {\n                throw new Error(`Position #${positionId} not found`);\n            }\n\n            // Prompt for amount to withdraw\n            const amount = prompt(`Enter amount to withdraw from position #${positionId}. Available margin: ${web3.utils.fromWei(position.margin, 'ether')}`);\n            if (!amount) return;\n\n            const weiAmount = web3.utils.toWei(amount, 'ether');\n            console.log(`Withdrawing ${amount} from position #${positionId}`);\n\n            // Call the withdrawMargin function\n            const transaction = await contracts.marginTradeManager.methods.withdrawMargin(\n                positionId,\n                weiAmount\n            ).send({ from: account });\n\n            console.log(\"Margin withdrawn successfully:\", transaction);\n            setSuccessMessage(`Successfully withdrew ${amount} from position #${positionId}`);\n            setSuccess(true);\n            \n            // Refresh user position data\n            fetchUserPositions();\n        } catch (error) {\n            console.error(\"Error withdrawing margin:\", error);\n            setError(error.message || \"Failed to withdraw margin. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Clear success message after 5 seconds\n    React.useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                setSuccess(false);\n            }, 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    return (\n        <div className=\"trade-positions card\">\n            <div className=\"tabs\">\n                <button \n                    className={`tab-button ${activeTab === 'open' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('open')}\n                >\n                    Open Position\n                </button>\n                <button \n                    className={`tab-button ${activeTab === 'positions' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('positions')}\n                >\n                    My Positions\n                </button>\n            </div>\n            \n            {activeTab === 'open' ? (\n                <div className=\"open-position-form\">\n                    <h2>Open Trading Position</h2>\n                    \n                    <div className=\"input-group\">\n                        <label>Position Size</label>\n                        <input\n                            type=\"number\"\n                            value={positionSize}\n                            onChange={(e) => setPositionSize(e.target.value)}\n                            placeholder=\"Enter position size\"\n                            step=\"0.01\"\n                            min=\"0.01\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Leverage (1-100x)</label>\n                        <input\n                            type=\"number\"\n                            value={leverage}\n                            onChange={(e) => setLeverage(e.target.value)}\n                            placeholder=\"Enter leverage\"\n                            step=\"1\"\n                            min=\"1\"\n                            max=\"100\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Stop Loss/Take Profit Level</label>\n                        <input\n                            type=\"number\"\n                            value={sltp}\n                            onChange={(e) => setSltp(e.target.value)}\n                            placeholder=\"Enter SLTP (0 if not used)\"\n                            step=\"0.01\"\n                            min=\"0\"\n                        />\n                    </div>\n                    \n                    <div className=\"input-group checkbox\">\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                checked={reduceOnly}\n                                onChange={(e) => setReduceOnly(e.target.checked)}\n                            />\n                            Reduce Only\n                        </label>\n                    </div>\n                    \n                    <div className=\"input-group\">\n                        <label>Position Type</label>\n                        <select\n                            value={positionType}\n                            onChange={(e) => setPositionType(e.target.value)}\n                        >\n                            <option value=\"0\">LONG</option>\n                            <option value=\"1\">SHORT</option>\n                        </select>\n                    </div>\n                    \n                    <button\n                        className=\"btn primary\"\n                        onClick={handleOpenPosition}\n                        disabled={loading || !isInitialized || !positionSize || !leverage}\n                    >\n                        {loading ? \"Processing...\" : \"Open Position\"}\n                    </button>\n                </div>\n            ) : (\n                <div className=\"positions-list\">\n                    <h2>My Trading Positions</h2>\n                    \n                    {positions.length === 0 ? (\n                        <p className=\"no-positions\">You don't have any positions yet.</p>\n                    ) : (\n                        <div className=\"positions-table-container\">\n                            <table className=\"positions-table\">\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Type</th>\n                                        <th>Size</th>\n                                        <th>Entry Price</th>\n                                        <th>Leverage</th>\n                                        <th>Margin</th>\n                                        <th>Status</th>\n                                        <th>Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {positions.map((position) => (\n                                        <tr key={position.id} className={position.open ? 'open' : 'closed'}>\n                                            <td>{position.id}</td>\n                                            <td>{position.positionType === '0' ? 'LONG' : 'SHORT'}</td>\n                                            <td>{web3.utils.fromWei(position.positionSize, 'ether')}</td>\n                                            <td>{web3.utils.fromWei(position.entryPrice, 'ether')}</td>\n                                            <td>{position.leverage}x</td>\n                                            <td>{web3.utils.fromWei(position.margin, 'ether')} {position.isEth ? 'ETH' : 'Tokens'}</td>\n                                            <td>{position.open ? 'Open' : 'Closed'}</td>\n                                            <td>\n                                                {position.open && (\n                                                    <>\n                                                        <button\n                                                            className=\"btn small\"\n                                                            onClick={() => handleClosePosition(position.id)}\n                                                            disabled={loading}\n                                                        >\n                                                            Close\n                                                        </button>\n                                                        <button\n                                                            className=\"btn small secondary\"\n                                                            onClick={() => handleWithdrawMargin(position.id)}\n                                                            disabled={loading}\n                                                        >\n                                                            Withdraw\n                                                        </button>\n                                                    </>\n                                                )}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            )}\n            \n            {error && <p className=\"error-message\">{error}</p>}\n            {success && <p className=\"success-message\">{successMessage}</p>}\n            \n            {!isInitialized && (\n                <p className=\"warning-message\">Please connect your wallet to manage positions.</p>\n            )}\n        </div>\n    );\n};\n\nexport default TradePositions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}