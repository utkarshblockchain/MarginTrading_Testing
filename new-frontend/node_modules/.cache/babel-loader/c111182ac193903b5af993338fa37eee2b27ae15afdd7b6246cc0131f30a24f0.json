{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\new-frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    account,\n    connectWallet,\n    isInitialized,\n    networkId\n  } = useWeb3();\n\n  // Format account address for display\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  // Get network name based on network ID\n  const getNetworkName = id => {\n    switch (id) {\n      case 1:\n        return 'Ethereum Mainnet';\n      case 11155111:\n        return 'Sepolia Testnet';\n      case 5:\n        return 'Goerli Testnet';\n      default:\n        return `Network ID: ${id}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Margin Trading DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-info\",\n      children: networkId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-badge\",\n        children: getNetworkName(networkId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-connect\",\n      children: !isInitialized ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-address\",\n          children: formatAddress(account)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"+YibRIhulOHlaEORdhxrDHqzhAs=\", false, function () {\n  return [useWeb3];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useWeb3","jsxDEV","_jsxDEV","Header","_s","account","connectWallet","isInitialized","networkId","formatAddress","address","substring","length","getNetworkName","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/new-frontend/src/components/Header.js"],"sourcesContent":["import React from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\n\nconst Header = () => {\n    const { account, connectWallet, isInitialized, networkId } = useWeb3();\n\n    // Format account address for display\n    const formatAddress = (address) => {\n        if (!address) return '';\n        return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n    };\n\n    // Get network name based on network ID\n    const getNetworkName = (id) => {\n        switch (id) {\n            case 1:\n                return 'Ethereum Mainnet';\n            case 11155111:\n                return 'Sepolia Testnet';\n            case 5:\n                return 'Goerli Testnet';\n            default:\n                return `Network ID: ${id}`;\n        }\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"logo\">\n                <h1>Margin Trading DApp</h1>\n            </div>\n            <div className=\"network-info\">\n                {networkId && (\n                    <div className=\"network-badge\">\n                        {getNetworkName(networkId)}\n                    </div>\n                )}\n            </div>\n            <div className=\"wallet-connect\">\n                {!isInitialized ? (\n                    <button className=\"connect-button\" onClick={connectWallet}>\n                        Connect Wallet\n                    </button>\n                ) : (\n                    <div className=\"account-info\">\n                        <div className=\"account-address\">\n                            {formatAddress(account)}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,OAAO;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EAAU,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAEtE;EACA,MAAMS,aAAa,GAAIC,OAAO,IAAK;IAC/B,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;IACvB,OAAO,GAAGA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMD,OAAO,CAACC,SAAS,CAACD,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC,EAAE;EAClF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,EAAE,IAAK;IAC3B,QAAQA,EAAE;MACN,KAAK,CAAC;QACF,OAAO,kBAAkB;MAC7B,KAAK,QAAQ;QACT,OAAO,iBAAiB;MAC5B,KAAK,CAAC;QACF,OAAO,gBAAgB;MAC3B;QACI,OAAO,eAAeA,EAAE,EAAE;IAClC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAQa,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBd,OAAA;MAAKa,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBd,OAAA;QAAAc,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBR,SAAS,iBACNN,OAAA;QAAKa,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBH,cAAc,CAACL,SAAS;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1B,CAACT,aAAa,gBACXL,OAAA;QAAQa,SAAS,EAAC,gBAAgB;QAACM,OAAO,EAAEf,aAAc;QAAAU,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETlB,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBd,OAAA;UAAKa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC3BP,aAAa,CAACJ,OAAO;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAAChB,EAAA,CAlDID,MAAM;EAAA,QACqDH,OAAO;AAAA;AAAAsB,EAAA,GADlEnB,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}