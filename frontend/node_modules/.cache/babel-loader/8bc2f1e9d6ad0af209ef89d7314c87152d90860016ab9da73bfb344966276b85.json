{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\DepositCollateral.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/DepositCollateral.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepositCollateral = () => {\n  _s();\n  const {\n    web3,\n    contracts,\n    account\n  } = useWeb3();\n  const [amount, setAmount] = useState('');\n  const [collateralType, setCollateralType] = useState('eth');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [approvalLoading, setApprovalLoading] = useState(false);\n  const handleDeposit = async e => {\n    e.preventDefault();\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      if (collateralType === 'eth') {\n        // Deposit ETH\n        const amountWei = web3.utils.toWei(amount, 'ether');\n        await contracts.marginTrading.methods.depositMargin().send({\n          from: account,\n          value: amountWei\n        });\n        setSuccess(`Successfully deposited ${amount} ETH as collateral`);\n      } else {\n        // Deposit ERC20 token\n        const amountWei = web3.utils.toWei(amount, 'ether');\n\n        // First approve the token transfer\n        try {\n          setApprovalLoading(true);\n          console.log(\"Approving token transfer...\");\n          await contracts.mockToken.methods.approve(contracts.marginTrading.options.address, amountWei).send({\n            from: account\n          });\n          console.log(\"Token transfer approved\");\n          setApprovalLoading(false);\n\n          // Now deposit the token\n          console.log(\"Depositing tokens...\");\n          await contracts.marginTrading.methods.depositMarginERC20(contracts.mockToken.options.address, amountWei).send({\n            from: account\n          });\n          setSuccess(`Successfully deposited ${amount} tokens as collateral`);\n        } catch (approvalError) {\n          console.error(\"Error approving token transfer:\", approvalError);\n          setError(\"Failed to approve token transfer. Please try again.\");\n          setApprovalLoading(false);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Reset form\n      setAmount('');\n    } catch (error) {\n      console.error(\"Error depositing collateral:\", error);\n      setError(error.message || \"Failed to deposit collateral. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      const amountWei = web3.utils.toWei(amount, 'ether');\n      await contracts.marginTrading.methods.withdrawMargin(0, amountWei) // Using position ID 0 for simplicity\n      .send({\n        from: account\n      });\n      setSuccess(`Successfully withdrew ${amount} from collateral`);\n\n      // Reset form\n      setAmount('');\n    } catch (error) {\n      console.error(\"Error withdrawing collateral:\", error);\n      setError(error.message || \"Failed to withdraw collateral. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to check if the user has enough token balance\n  const checkTokenBalance = async () => {\n    if (!web3 || !contracts || !account || collateralType !== 'token') return;\n    try {\n      const balance = await contracts.mockToken.methods.balanceOf(account).call();\n      const amountWei = web3.utils.toWei(amount || '0', 'ether');\n      if (BigInt(balance) < BigInt(amountWei)) {\n        setError(`Insufficient token balance. You have ${web3.utils.fromWei(balance, 'ether')} tokens.`);\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Error checking token balance:\", error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-collateral\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deposit/Withdraw Collateral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDeposit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          step: \"0.01\",\n          min: \"0.01\",\n          placeholder: \"0.1\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"collateralType\",\n          children: \"Collateral Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collateral-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `collateral-btn ${collateralType === 'eth' ? 'active' : ''}`,\n            onClick: () => setCollateralType('eth'),\n            children: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `collateral-btn ${collateralType === 'token' ? 'active' : ''}`,\n            onClick: () => setCollateralType('token'),\n            children: \"Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || approvalLoading || !amount,\n          className: \"action-button deposit-button\",\n          children: loading ? 'Processing...' : approvalLoading ? 'Approving...' : 'Deposit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleWithdraw,\n          disabled: loading || !amount,\n          className: \"action-button withdraw-button\",\n          children: loading ? 'Processing...' : 'Withdraw'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(DepositCollateral, \"qwnJCtiqPYbYww0kAqHqrckw9AA=\", false, function () {\n  return [useWeb3];\n});\n_c = DepositCollateral;\nexport default DepositCollateral;\nvar _c;\n$RefreshReg$(_c, \"DepositCollateral\");","map":{"version":3,"names":["React","useState","useWeb3","jsxDEV","_jsxDEV","DepositCollateral","_s","web3","contracts","account","amount","setAmount","collateralType","setCollateralType","loading","setLoading","error","setError","success","setSuccess","approvalLoading","setApprovalLoading","handleDeposit","e","preventDefault","parseFloat","amountWei","utils","toWei","marginTrading","methods","depositMargin","send","from","value","console","log","mockToken","approve","options","address","depositMarginERC20","approvalError","message","handleWithdraw","withdrawMargin","checkTokenBalance","balance","balanceOf","call","BigInt","fromWei","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","target","step","min","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/DepositCollateral.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/DepositCollateral.css';\n\nconst DepositCollateral = () => {\n    const { web3, contracts, account } = useWeb3();\n    const [amount, setAmount] = useState('');\n    const [collateralType, setCollateralType] = useState('eth');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n    const [approvalLoading, setApprovalLoading] = useState(false);\n\n    const handleDeposit = async (e) => {\n        e.preventDefault();\n        if (!amount || parseFloat(amount) <= 0) {\n            setError('Please enter a valid amount');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(null);\n\n            if (collateralType === 'eth') {\n                // Deposit ETH\n                const amountWei = web3.utils.toWei(amount, 'ether');\n                await contracts.marginTrading.methods\n                    .depositMargin()\n                    .send({ from: account, value: amountWei });\n                \n                setSuccess(`Successfully deposited ${amount} ETH as collateral`);\n            } else {\n                // Deposit ERC20 token\n                const amountWei = web3.utils.toWei(amount, 'ether');\n                \n                // First approve the token transfer\n                try {\n                    setApprovalLoading(true);\n                    console.log(\"Approving token transfer...\");\n                    \n                    await contracts.mockToken.methods\n                        .approve(contracts.marginTrading.options.address, amountWei)\n                        .send({ from: account });\n                    \n                    console.log(\"Token transfer approved\");\n                    setApprovalLoading(false);\n                    \n                    // Now deposit the token\n                    console.log(\"Depositing tokens...\");\n                    await contracts.marginTrading.methods\n                        .depositMarginERC20(contracts.mockToken.options.address, amountWei)\n                        .send({ from: account });\n                    \n                    setSuccess(`Successfully deposited ${amount} tokens as collateral`);\n                } catch (approvalError) {\n                    console.error(\"Error approving token transfer:\", approvalError);\n                    setError(\"Failed to approve token transfer. Please try again.\");\n                    setApprovalLoading(false);\n                    setLoading(false);\n                    return;\n                }\n            }\n\n            // Reset form\n            setAmount('');\n        } catch (error) {\n            console.error(\"Error depositing collateral:\", error);\n            setError(error.message || \"Failed to deposit collateral. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleWithdraw = async () => {\n        if (!amount || parseFloat(amount) <= 0) {\n            setError('Please enter a valid amount');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(null);\n\n            const amountWei = web3.utils.toWei(amount, 'ether');\n            await contracts.marginTrading.methods\n                .withdrawMargin(0, amountWei) // Using position ID 0 for simplicity\n                .send({ from: account });\n            \n            setSuccess(`Successfully withdrew ${amount} from collateral`);\n            \n            // Reset form\n            setAmount('');\n        } catch (error) {\n            console.error(\"Error withdrawing collateral:\", error);\n            setError(error.message || \"Failed to withdraw collateral. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Function to check if the user has enough token balance\n    const checkTokenBalance = async () => {\n        if (!web3 || !contracts || !account || collateralType !== 'token') return;\n        \n        try {\n            const balance = await contracts.mockToken.methods.balanceOf(account).call();\n            const amountWei = web3.utils.toWei(amount || '0', 'ether');\n            \n            if (BigInt(balance) < BigInt(amountWei)) {\n                setError(`Insufficient token balance. You have ${web3.utils.fromWei(balance, 'ether')} tokens.`);\n                return false;\n            }\n            \n            return true;\n        } catch (error) {\n            console.error(\"Error checking token balance:\", error);\n            return false;\n        }\n    };\n\n    return (\n        <div className=\"deposit-collateral\">\n            <h2>Deposit/Withdraw Collateral</h2>\n            \n            <form onSubmit={handleDeposit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input\n                        type=\"number\"\n                        id=\"amount\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        step=\"0.01\"\n                        min=\"0.01\"\n                        placeholder=\"0.1\"\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"collateralType\">Collateral Type</label>\n                    <div className=\"collateral-selector\">\n                        <button \n                            type=\"button\" \n                            className={`collateral-btn ${collateralType === 'eth' ? 'active' : ''}`}\n                            onClick={() => setCollateralType('eth')}\n                        >\n                            ETH\n                        </button>\n                        <button \n                            type=\"button\" \n                            className={`collateral-btn ${collateralType === 'token' ? 'active' : ''}`}\n                            onClick={() => setCollateralType('token')}\n                        >\n                            Token\n                        </button>\n                    </div>\n                </div>\n\n                {error && <div className=\"error-message\">{error}</div>}\n                {success && <div className=\"success-message\">{success}</div>}\n\n                <div className=\"button-group\">\n                    <button \n                        type=\"submit\" \n                        disabled={loading || approvalLoading || !amount} \n                        className=\"action-button deposit-button\"\n                    >\n                        {loading ? 'Processing...' : approvalLoading ? 'Approving...' : 'Deposit'}\n                    </button>\n                    <button \n                        type=\"button\"\n                        onClick={handleWithdraw}\n                        disabled={loading || !amount} \n                        className=\"action-button withdraw-button\"\n                    >\n                        {loading ? 'Processing...' : 'Withdraw'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default DepositCollateral;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}