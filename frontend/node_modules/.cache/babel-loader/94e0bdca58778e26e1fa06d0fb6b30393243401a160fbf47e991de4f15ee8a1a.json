{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\PositionInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/PositionInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PositionInfo = () => {\n  _s();\n  const {\n    web3,\n    contracts,\n    account,\n    ethPrice\n  } = useWeb3();\n  const [positions, setPositions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchPositions = async () => {\n    if (!web3 || !contracts || !account) {\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get user position count\n      const positionCount = await contracts.marginTrading.methods.userPositionCount(account).call();\n      console.log(\"User position count:\", positionCount);\n      if (parseInt(positionCount) === 0) {\n        setPositions([]);\n        setLoading(false);\n        return;\n      }\n\n      // Fetch all positions\n      const positionPromises = [];\n      for (let i = 0; i < positionCount; i++) {\n        positionPromises.push(contracts.marginTrading.methods.positions(account, i).call());\n      }\n      const positionResults = await Promise.all(positionPromises);\n      console.log(\"Position results:\", positionResults);\n\n      // Format position data\n      const formattedPositions = positionResults.map((position, index) => {\n        // Check if position has required properties\n        if (!position) {\n          console.error(\"Invalid position data:\", position);\n          return null;\n        }\n\n        // Determine if position is long or short (0 = long, 1 = short)\n        const isLong = position.positionType === '0';\n\n        // Extract other position data with fallbacks\n        const size = position.size ? web3.utils.fromWei(position.size, 'ether') : '0';\n        const margin = position.margin ? web3.utils.fromWei(position.margin, 'ether') : '0';\n        const leverage = position.leverage || '0';\n        const entryPrice = position.entryPrice ? web3.utils.fromWei(position.entryPrice, 'ether') : '0';\n        const liquidationPrice = position.liquidationPrice ? web3.utils.fromWei(position.liquidationPrice, 'ether') : '0';\n\n        // Calculate PnL (simplified for demo)\n        const currentPrice = ethPrice;\n        let pnl = 0;\n        if (isLong) {\n          pnl = (currentPrice - entryPrice) * size * leverage;\n        } else {\n          pnl = (entryPrice - currentPrice) * size * leverage;\n        }\n        return {\n          id: index,\n          type: isLong ? 'Long' : 'Short',\n          size,\n          margin,\n          leverage,\n          entryPrice,\n          liquidationPrice,\n          currentPrice,\n          pnl,\n          pnlPercent: pnl / margin * 100,\n          timestamp: position.timestamp ? new Date(position.timestamp * 1000).toLocaleString() : 'Unknown'\n        };\n      }).filter(position => position !== null);\n      setPositions(formattedPositions);\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n      setError(\"Failed to load position data. Please refresh the page.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch positions on component mount and when account changes\n  useEffect(() => {\n    fetchPositions();\n\n    // Set up interval to refresh positions\n    const interval = setInterval(fetchPositions, 10000);\n    return () => clearInterval(interval);\n  }, [web3, contracts, account, ethPrice]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Loading positions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), positions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-positions-message\",\n      children: \"You don't have any open positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"positions-list\",\n      children: positions.map(position => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `position-card ${position.type.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `position-type ${position.type.toLowerCase()}`,\n            children: position.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"position-id\",\n            children: [\"ID: \", position.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [parseFloat(position.size).toFixed(4), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Margin:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [parseFloat(position.margin).toFixed(4), \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Leverage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [position.leverage, \"x\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Entry Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [\"$\", parseFloat(position.entryPrice).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Current Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [\"$\", parseFloat(position.currentPrice).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Liquidation Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [\"$\", parseFloat(position.liquidationPrice).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row pnl\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"PnL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `detail-value ${position.pnl >= 0 ? 'profit' : 'loss'}`,\n              children: [\"$\", position.pnl.toFixed(2), \" (\", position.pnlPercent.toFixed(2), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Opened:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: position.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, position.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(PositionInfo, \"8cKe0r7JVTPjRaL73lpC40JysPE=\", false, function () {\n  return [useWeb3];\n});\n_c = PositionInfo;\nexport default PositionInfo;\nvar _c;\n$RefreshReg$(_c, \"PositionInfo\");","map":{"version":3,"names":["React","useState","useEffect","useWeb3","jsxDEV","_jsxDEV","PositionInfo","_s","web3","contracts","account","ethPrice","positions","setPositions","loading","setLoading","error","setError","fetchPositions","positionCount","marginTrading","methods","userPositionCount","call","console","log","parseInt","positionPromises","i","push","positionResults","Promise","all","formattedPositions","map","position","index","isLong","positionType","size","utils","fromWei","margin","leverage","entryPrice","liquidationPrice","currentPrice","pnl","id","type","pnlPercent","timestamp","Date","toLocaleString","filter","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","toLowerCase","parseFloat","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/PositionInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/PositionInfo.css';\n\nconst PositionInfo = () => {\n    const { web3, contracts, account, ethPrice } = useWeb3();\n    const [positions, setPositions] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchPositions = async () => {\n        if (!web3 || !contracts || !account) {\n            setLoading(false);\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Get user position count\n            const positionCount = await contracts.marginTrading.methods\n                .userPositionCount(account)\n                .call();\n\n            console.log(\"User position count:\", positionCount);\n\n            if (parseInt(positionCount) === 0) {\n                setPositions([]);\n                setLoading(false);\n                return;\n            }\n\n            // Fetch all positions\n            const positionPromises = [];\n            for (let i = 0; i < positionCount; i++) {\n                positionPromises.push(\n                    contracts.marginTrading.methods.positions(account, i).call()\n                );\n            }\n\n            const positionResults = await Promise.all(positionPromises);\n            console.log(\"Position results:\", positionResults);\n            \n            // Format position data\n            const formattedPositions = positionResults.map((position, index) => {\n                // Check if position has required properties\n                if (!position) {\n                    console.error(\"Invalid position data:\", position);\n                    return null;\n                }\n                \n                // Determine if position is long or short (0 = long, 1 = short)\n                const isLong = position.positionType === '0';\n                \n                // Extract other position data with fallbacks\n                const size = position.size ? web3.utils.fromWei(position.size, 'ether') : '0';\n                const margin = position.margin ? web3.utils.fromWei(position.margin, 'ether') : '0';\n                const leverage = position.leverage || '0';\n                const entryPrice = position.entryPrice ? web3.utils.fromWei(position.entryPrice, 'ether') : '0';\n                const liquidationPrice = position.liquidationPrice ? web3.utils.fromWei(position.liquidationPrice, 'ether') : '0';\n                \n                // Calculate PnL (simplified for demo)\n                const currentPrice = ethPrice;\n                let pnl = 0;\n                \n                if (isLong) {\n                    pnl = (currentPrice - entryPrice) * size * leverage;\n                } else {\n                    pnl = (entryPrice - currentPrice) * size * leverage;\n                }\n                \n                return {\n                    id: index,\n                    type: isLong ? 'Long' : 'Short',\n                    size,\n                    margin,\n                    leverage,\n                    entryPrice,\n                    liquidationPrice,\n                    currentPrice,\n                    pnl,\n                    pnlPercent: (pnl / margin) * 100,\n                    timestamp: position.timestamp ? new Date(position.timestamp * 1000).toLocaleString() : 'Unknown'\n                };\n            }).filter(position => position !== null);\n            \n            setPositions(formattedPositions);\n        } catch (error) {\n            console.error(\"Error fetching positions:\", error);\n            setError(\"Failed to load position data. Please refresh the page.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch positions on component mount and when account changes\n    useEffect(() => {\n        fetchPositions();\n        \n        // Set up interval to refresh positions\n        const interval = setInterval(fetchPositions, 10000);\n        return () => clearInterval(interval);\n    }, [web3, contracts, account, ethPrice]);\n\n    if (loading) {\n        return (\n            <div className=\"position-info\">\n                <h2>Your Positions</h2>\n                <div className=\"loading-message\">Loading positions...</div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"position-info\">\n                <h2>Your Positions</h2>\n                <div className=\"error-message\">{error}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"position-info\">\n            <h2>Your Positions</h2>\n            \n            {positions.length === 0 ? (\n                <div className=\"no-positions-message\">\n                    You don't have any open positions\n                </div>\n            ) : (\n                <div className=\"positions-list\">\n                    {positions.map(position => (\n                        <div key={position.id} className={`position-card ${position.type.toLowerCase()}`}>\n                            <div className=\"position-header\">\n                                <span className={`position-type ${position.type.toLowerCase()}`}>\n                                    {position.type}\n                                </span>\n                                <span className=\"position-id\">ID: {position.id}</span>\n                            </div>\n                            \n                            <div className=\"position-details\">\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Size:</span>\n                                    <span className=\"detail-value\">{parseFloat(position.size).toFixed(4)} ETH</span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Margin:</span>\n                                    <span className=\"detail-value\">{parseFloat(position.margin).toFixed(4)} ETH</span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Leverage:</span>\n                                    <span className=\"detail-value\">{position.leverage}x</span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Entry Price:</span>\n                                    <span className=\"detail-value\">${parseFloat(position.entryPrice).toFixed(2)}</span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Current Price:</span>\n                                    <span className=\"detail-value\">${parseFloat(position.currentPrice).toFixed(2)}</span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Liquidation Price:</span>\n                                    <span className=\"detail-value\">${parseFloat(position.liquidationPrice).toFixed(2)}</span>\n                                </div>\n                                <div className=\"detail-row pnl\">\n                                    <span className=\"detail-label\">PnL:</span>\n                                    <span className={`detail-value ${position.pnl >= 0 ? 'profit' : 'loss'}`}>\n                                        ${position.pnl.toFixed(2)} ({position.pnlPercent.toFixed(2)}%)\n                                    </span>\n                                </div>\n                                <div className=\"detail-row\">\n                                    <span className=\"detail-label\">Opened:</span>\n                                    <span className=\"detail-value\">{position.timestamp}</span>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PositionInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}