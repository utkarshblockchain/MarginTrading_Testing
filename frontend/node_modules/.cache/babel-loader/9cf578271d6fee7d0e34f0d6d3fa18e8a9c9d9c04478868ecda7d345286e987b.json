{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\DepositCollateral.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/DepositCollateral.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DepositCollateral = () => {\n  _s();\n  const {\n    web3,\n    contracts,\n    account\n  } = useWeb3();\n  const [amount, setAmount] = useState('');\n  const [collateralType, setCollateralType] = useState('eth');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [approvalLoading, setApprovalLoading] = useState(false);\n  const [userMargin, setUserMargin] = useState('0');\n  const [userTokenMargin, setUserTokenMargin] = useState('0');\n  const [tokenBalance, setTokenBalance] = useState('0');\n  const [allowance, setAllowance] = useState('0');\n\n  // Fetch user's margin balances\n  useEffect(() => {\n    const fetchMarginBalances = async () => {\n      if (!web3 || !contracts || !account || !contracts.marginTrading || !contracts.mockToken) {\n        return;\n      }\n      try {\n        // Fetch ETH margin\n        const ethMargin = await contracts.marginTrading.methods.userMargin(account).call();\n        setUserMargin(web3.utils.fromWei(ethMargin, 'ether'));\n\n        // Fetch token margin\n        const tokenMargin = await contracts.marginTrading.methods.userTokenMargin(account, contracts.mockToken.options.address).call();\n        setUserTokenMargin(web3.utils.fromWei(tokenMargin, 'ether'));\n\n        // Fetch token balance\n        const balance = await contracts.mockToken.methods.balanceOf(account).call();\n        setTokenBalance(web3.utils.fromWei(balance, 'ether'));\n\n        // Fetch current allowance\n        const currentAllowance = await contracts.mockToken.methods.allowance(account, contracts.marginTrading.options.address).call();\n        setAllowance(web3.utils.fromWei(currentAllowance, 'ether'));\n        console.log(\"User margins:\", {\n          ethMargin: web3.utils.fromWei(ethMargin, 'ether'),\n          tokenMargin: web3.utils.fromWei(tokenMargin, 'ether'),\n          tokenBalance: web3.utils.fromWei(balance, 'ether'),\n          allowance: web3.utils.fromWei(currentAllowance, 'ether')\n        });\n      } catch (error) {\n        console.error(\"Error fetching margin balances:\", error);\n      }\n    };\n    fetchMarginBalances();\n\n    // Set up interval to refresh balances\n    const interval = setInterval(fetchMarginBalances, 10000);\n    return () => clearInterval(interval);\n  }, [web3, contracts, account]);\n\n  // Function to handle token approval\n  const handleApproveToken = async () => {\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setApprovalLoading(true);\n      setError(null);\n      setSuccess(null);\n\n      // Use a very large approval amount to avoid needing multiple approvals\n      const maxApproval = web3.utils.toWei('1000000', 'ether');\n      console.log(\"Approving tokens for:\", contracts.marginTrading.options.address);\n      console.log(\"From account:\", account);\n      console.log(\"Amount:\", maxApproval);\n      const approvalTx = await contracts.mockToken.methods.approve(contracts.marginTrading.options.address, maxApproval).send({\n        from: account\n      });\n      console.log(\"Token approval transaction:\", approvalTx);\n\n      // Fetch updated allowance\n      const newAllowance = await contracts.mockToken.methods.allowance(account, contracts.marginTrading.options.address).call();\n      setAllowance(web3.utils.fromWei(newAllowance, 'ether'));\n      setSuccess(`Successfully approved tokens for deposit`);\n    } catch (error) {\n      console.error(\"Error approving tokens:\", error);\n      setError(error.message || \"Failed to approve tokens. Please try again.\");\n    } finally {\n      setApprovalLoading(false);\n    }\n  };\n  const handleDeposit = async e => {\n    e.preventDefault();\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      if (collateralType === 'eth') {\n        // Deposit ETH\n        const amountWei = web3.utils.toWei(amount, 'ether');\n        console.log(\"Depositing ETH:\", amountWei);\n        await contracts.marginTrading.methods.depositMargin().send({\n          from: account,\n          value: amountWei\n        });\n        setSuccess(`Successfully deposited ${amount} ETH as collateral`);\n      } else {\n        // Deposit ERC20 token\n        const amountWei = web3.utils.toWei(amount, 'ether');\n\n        // Check token balance first\n        const balance = await contracts.mockToken.methods.balanceOf(account).call();\n        console.log(\"Token balance:\", web3.utils.fromWei(balance, 'ether'), \"tokens\");\n        if (parseFloat(web3.utils.fromWei(balance, 'ether')) < parseFloat(amount)) {\n          setError(`Insufficient token balance. You have ${web3.utils.fromWei(balance, 'ether')} tokens.`);\n          setLoading(false);\n          return;\n        }\n\n        // Check if token is already approved\n        const currentAllowance = await contracts.mockToken.methods.allowance(account, contracts.marginTrading.options.address).call();\n        console.log(\"Current allowance:\", web3.utils.fromWei(currentAllowance, 'ether'), \"tokens\");\n        if (parseFloat(web3.utils.fromWei(currentAllowance, 'ether')) < parseFloat(amount)) {\n          setError(`Insufficient token allowance. Please approve tokens first.`);\n          setLoading(false);\n          return;\n        }\n\n        // Now deposit the token\n        try {\n          console.log(\"Depositing tokens:\", amountWei);\n          await contracts.marginTrading.methods.depositMarginERC20(contracts.mockToken.options.address, amountWei).send({\n            from: account\n          });\n          setSuccess(`Successfully deposited ${amount} tokens as collateral`);\n        } catch (depositError) {\n          console.error(\"Error depositing tokens:\", depositError);\n          setError(\"Failed to deposit tokens. Please try again.\");\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Reset form\n      setAmount('');\n    } catch (error) {\n      console.error(\"Error depositing collateral:\", error);\n      setError(error.message || \"Failed to deposit collateral. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      const amountWei = web3.utils.toWei(amount, 'ether');\n      console.log(\"Withdrawing margin:\", amountWei);\n      await contracts.marginTrading.methods.withdrawMargin(0, amountWei) // Using position ID 0 for simplicity\n      .send({\n        from: account\n      });\n      setSuccess(`Successfully withdrew ${amount} from collateral`);\n\n      // Reset form\n      setAmount('');\n    } catch (error) {\n      console.error(\"Error withdrawing collateral:\", error);\n      setError(error.message || \"Failed to withdraw collateral. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-collateral\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deposit/Withdraw Collateral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"ETH Margin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"balance-value\",\n          children: [parseFloat(userMargin).toFixed(4), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Token Margin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"balance-value\",\n          children: [parseFloat(userTokenMargin).toFixed(2), \" Tokens\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), collateralType === 'token' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balance-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Token Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balance-value\",\n            children: [parseFloat(tokenBalance).toFixed(2), \" Tokens\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"balance-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Token Allowance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"balance-value\",\n            children: [parseFloat(allowance).toFixed(2), \" Tokens\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDeposit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          step: \"0.01\",\n          min: \"0.01\",\n          placeholder: \"0.1\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"collateralType\",\n          children: \"Collateral Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collateral-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `collateral-btn ${collateralType === 'eth' ? 'active' : ''}`,\n            onClick: () => setCollateralType('eth'),\n            children: \"ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `collateral-btn ${collateralType === 'token' ? 'active' : ''}`,\n            onClick: () => setCollateralType('token'),\n            children: \"Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [collateralType === 'token' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleApproveToken,\n          disabled: approvalLoading || !amount,\n          className: \"action-button approve-button\",\n          children: approvalLoading ? 'Approving...' : 'Approve Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !amount || collateralType === 'token' && parseFloat(allowance) < parseFloat(amount),\n          className: \"action-button deposit-button\",\n          children: loading ? 'Processing...' : 'Deposit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleWithdraw,\n          disabled: loading || !amount,\n          className: \"action-button withdraw-button\",\n          children: loading ? 'Processing...' : 'Withdraw'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n};\n_s(DepositCollateral, \"IQFwozyMStG14QFuWo02dlk7LQs=\", false, function () {\n  return [useWeb3];\n});\n_c = DepositCollateral;\nexport default DepositCollateral;\nvar _c;\n$RefreshReg$(_c, \"DepositCollateral\");","map":{"version":3,"names":["React","useState","useEffect","useWeb3","jsxDEV","_jsxDEV","Fragment","_Fragment","DepositCollateral","_s","web3","contracts","account","amount","setAmount","collateralType","setCollateralType","loading","setLoading","error","setError","success","setSuccess","approvalLoading","setApprovalLoading","userMargin","setUserMargin","userTokenMargin","setUserTokenMargin","tokenBalance","setTokenBalance","allowance","setAllowance","fetchMarginBalances","marginTrading","mockToken","ethMargin","methods","call","utils","fromWei","tokenMargin","options","address","balance","balanceOf","currentAllowance","console","log","interval","setInterval","clearInterval","handleApproveToken","parseFloat","maxApproval","toWei","approvalTx","approve","send","from","newAllowance","message","handleDeposit","e","preventDefault","amountWei","depositMargin","value","depositMarginERC20","depositError","handleWithdraw","withdrawMargin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","onSubmit","htmlFor","type","id","onChange","target","step","min","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/DepositCollateral.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/DepositCollateral.css';\n\nconst DepositCollateral = () => {\n    const { web3, contracts, account } = useWeb3();\n    const [amount, setAmount] = useState('');\n    const [collateralType, setCollateralType] = useState('eth');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n    const [approvalLoading, setApprovalLoading] = useState(false);\n    const [userMargin, setUserMargin] = useState('0');\n    const [userTokenMargin, setUserTokenMargin] = useState('0');\n    const [tokenBalance, setTokenBalance] = useState('0');\n    const [allowance, setAllowance] = useState('0');\n\n    // Fetch user's margin balances\n    useEffect(() => {\n        const fetchMarginBalances = async () => {\n            if (!web3 || !contracts || !account || !contracts.marginTrading || !contracts.mockToken) {\n                return;\n            }\n\n            try {\n                // Fetch ETH margin\n                const ethMargin = await contracts.marginTrading.methods\n                    .userMargin(account)\n                    .call();\n                setUserMargin(web3.utils.fromWei(ethMargin, 'ether'));\n\n                // Fetch token margin\n                const tokenMargin = await contracts.marginTrading.methods\n                    .userTokenMargin(account, contracts.mockToken.options.address)\n                    .call();\n                setUserTokenMargin(web3.utils.fromWei(tokenMargin, 'ether'));\n\n                // Fetch token balance\n                const balance = await contracts.mockToken.methods\n                    .balanceOf(account)\n                    .call();\n                setTokenBalance(web3.utils.fromWei(balance, 'ether'));\n\n                // Fetch current allowance\n                const currentAllowance = await contracts.mockToken.methods\n                    .allowance(account, contracts.marginTrading.options.address)\n                    .call();\n                setAllowance(web3.utils.fromWei(currentAllowance, 'ether'));\n\n                console.log(\"User margins:\", {\n                    ethMargin: web3.utils.fromWei(ethMargin, 'ether'),\n                    tokenMargin: web3.utils.fromWei(tokenMargin, 'ether'),\n                    tokenBalance: web3.utils.fromWei(balance, 'ether'),\n                    allowance: web3.utils.fromWei(currentAllowance, 'ether')\n                });\n            } catch (error) {\n                console.error(\"Error fetching margin balances:\", error);\n            }\n        };\n\n        fetchMarginBalances();\n\n        // Set up interval to refresh balances\n        const interval = setInterval(fetchMarginBalances, 10000);\n        return () => clearInterval(interval);\n    }, [web3, contracts, account]);\n\n    // Function to handle token approval\n    const handleApproveToken = async () => {\n        if (!amount || parseFloat(amount) <= 0) {\n            setError('Please enter a valid amount');\n            return;\n        }\n\n        try {\n            setApprovalLoading(true);\n            setError(null);\n            setSuccess(null);\n\n            // Use a very large approval amount to avoid needing multiple approvals\n            const maxApproval = web3.utils.toWei('1000000', 'ether');\n            \n            console.log(\"Approving tokens for:\", contracts.marginTrading.options.address);\n            console.log(\"From account:\", account);\n            console.log(\"Amount:\", maxApproval);\n\n            const approvalTx = await contracts.mockToken.methods\n                .approve(contracts.marginTrading.options.address, maxApproval)\n                .send({ from: account });\n            \n            console.log(\"Token approval transaction:\", approvalTx);\n            \n            // Fetch updated allowance\n            const newAllowance = await contracts.mockToken.methods\n                .allowance(account, contracts.marginTrading.options.address)\n                .call();\n            setAllowance(web3.utils.fromWei(newAllowance, 'ether'));\n            \n            setSuccess(`Successfully approved tokens for deposit`);\n        } catch (error) {\n            console.error(\"Error approving tokens:\", error);\n            setError(error.message || \"Failed to approve tokens. Please try again.\");\n        } finally {\n            setApprovalLoading(false);\n        }\n    };\n\n    const handleDeposit = async (e) => {\n        e.preventDefault();\n        if (!amount || parseFloat(amount) <= 0) {\n            setError('Please enter a valid amount');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(null);\n\n            if (collateralType === 'eth') {\n                // Deposit ETH\n                const amountWei = web3.utils.toWei(amount, 'ether');\n                console.log(\"Depositing ETH:\", amountWei);\n                await contracts.marginTrading.methods\n                    .depositMargin()\n                    .send({ from: account, value: amountWei });\n                \n                setSuccess(`Successfully deposited ${amount} ETH as collateral`);\n            } else {\n                // Deposit ERC20 token\n                const amountWei = web3.utils.toWei(amount, 'ether');\n                \n                // Check token balance first\n                const balance = await contracts.mockToken.methods.balanceOf(account).call();\n                console.log(\"Token balance:\", web3.utils.fromWei(balance, 'ether'), \"tokens\");\n                \n                if (parseFloat(web3.utils.fromWei(balance, 'ether')) < parseFloat(amount)) {\n                    setError(`Insufficient token balance. You have ${web3.utils.fromWei(balance, 'ether')} tokens.`);\n                    setLoading(false);\n                    return;\n                }\n                \n                // Check if token is already approved\n                const currentAllowance = await contracts.mockToken.methods\n                    .allowance(account, contracts.marginTrading.options.address)\n                    .call();\n                console.log(\"Current allowance:\", web3.utils.fromWei(currentAllowance, 'ether'), \"tokens\");\n                \n                if (parseFloat(web3.utils.fromWei(currentAllowance, 'ether')) < parseFloat(amount)) {\n                    setError(`Insufficient token allowance. Please approve tokens first.`);\n                    setLoading(false);\n                    return;\n                }\n                \n                // Now deposit the token\n                try {\n                    console.log(\"Depositing tokens:\", amountWei);\n                    await contracts.marginTrading.methods\n                        .depositMarginERC20(contracts.mockToken.options.address, amountWei)\n                        .send({ from: account });\n                    \n                    setSuccess(`Successfully deposited ${amount} tokens as collateral`);\n                } catch (depositError) {\n                    console.error(\"Error depositing tokens:\", depositError);\n                    setError(\"Failed to deposit tokens. Please try again.\");\n                    setLoading(false);\n                    return;\n                }\n            }\n\n            // Reset form\n            setAmount('');\n        } catch (error) {\n            console.error(\"Error depositing collateral:\", error);\n            setError(error.message || \"Failed to deposit collateral. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleWithdraw = async () => {\n        if (!amount || parseFloat(amount) <= 0) {\n            setError('Please enter a valid amount');\n            return;\n        }\n\n        try {\n            setLoading(true);\n            setError(null);\n            setSuccess(null);\n\n            const amountWei = web3.utils.toWei(amount, 'ether');\n            console.log(\"Withdrawing margin:\", amountWei);\n            \n            await contracts.marginTrading.methods\n                .withdrawMargin(0, amountWei) // Using position ID 0 for simplicity\n                .send({ from: account });\n            \n            setSuccess(`Successfully withdrew ${amount} from collateral`);\n            \n            // Reset form\n            setAmount('');\n        } catch (error) {\n            console.error(\"Error withdrawing collateral:\", error);\n            setError(error.message || \"Failed to withdraw collateral. Please try again.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"deposit-collateral\">\n            <h2>Deposit/Withdraw Collateral</h2>\n            \n            <div className=\"balance-info\">\n                <div className=\"balance-item\">\n                    <span>ETH Margin:</span>\n                    <span className=\"balance-value\">{parseFloat(userMargin).toFixed(4)} ETH</span>\n                </div>\n                <div className=\"balance-item\">\n                    <span>Token Margin:</span>\n                    <span className=\"balance-value\">{parseFloat(userTokenMargin).toFixed(2)} Tokens</span>\n                </div>\n                {collateralType === 'token' && (\n                    <>\n                        <div className=\"balance-item\">\n                            <span>Token Balance:</span>\n                            <span className=\"balance-value\">{parseFloat(tokenBalance).toFixed(2)} Tokens</span>\n                        </div>\n                        <div className=\"balance-item\">\n                            <span>Token Allowance:</span>\n                            <span className=\"balance-value\">{parseFloat(allowance).toFixed(2)} Tokens</span>\n                        </div>\n                    </>\n                )}\n            </div>\n            \n            <form onSubmit={handleDeposit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input\n                        type=\"number\"\n                        id=\"amount\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        step=\"0.01\"\n                        min=\"0.01\"\n                        placeholder=\"0.1\"\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"collateralType\">Collateral Type</label>\n                    <div className=\"collateral-selector\">\n                        <button \n                            type=\"button\" \n                            className={`collateral-btn ${collateralType === 'eth' ? 'active' : ''}`}\n                            onClick={() => setCollateralType('eth')}\n                        >\n                            ETH\n                        </button>\n                        <button \n                            type=\"button\" \n                            className={`collateral-btn ${collateralType === 'token' ? 'active' : ''}`}\n                            onClick={() => setCollateralType('token')}\n                        >\n                            Token\n                        </button>\n                    </div>\n                </div>\n\n                {error && <div className=\"error-message\">{error}</div>}\n                {success && <div className=\"success-message\">{success}</div>}\n\n                <div className=\"button-group\">\n                    {collateralType === 'token' && (\n                        <button \n                            type=\"button\" \n                            onClick={handleApproveToken}\n                            disabled={approvalLoading || !amount} \n                            className=\"action-button approve-button\"\n                        >\n                            {approvalLoading ? 'Approving...' : 'Approve Tokens'}\n                        </button>\n                    )}\n                    <button \n                        type=\"submit\" \n                        disabled={loading || !amount || (collateralType === 'token' && parseFloat(allowance) < parseFloat(amount))} \n                        className=\"action-button deposit-button\"\n                    >\n                        {loading ? 'Processing...' : 'Deposit'}\n                    </button>\n                    <button \n                        type=\"button\"\n                        onClick={handleWithdraw}\n                        disabled={loading || !amount} \n                        className=\"action-button withdraw-button\"\n                    >\n                        {loading ? 'Processing...' : 'Withdraw'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default DepositCollateral;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}