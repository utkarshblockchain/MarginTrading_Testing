{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\PriceChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/PriceChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceChart = () => {\n  _s();\n  const {\n    ethPrice,\n    refreshData\n  } = useWeb3();\n  const [priceHistory, setPriceHistory] = useState([]);\n  const [timeLabels, setTimeLabels] = useState([]);\n\n  // Simulate price data fetching with useCallback to avoid dependency issues\n  const updatePriceData = useCallback(() => {\n    // Update price history\n    setPriceHistory(prev => {\n      const newHistory = [...prev, parseFloat(ethPrice)];\n      return newHistory.slice(-10); // Keep last 10 data points\n    });\n\n    // Update time labels\n    setTimeLabels(prev => {\n      const now = new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      const newLabels = [...prev, now];\n      return newLabels.slice(-10);\n    });\n  }, [ethPrice]);\n  useEffect(() => {\n    // Initial update\n    updatePriceData();\n\n    // Set up interval for regular updates\n    const interval = setInterval(() => {\n      refreshData(); // This will update ethPrice in the context\n      updatePriceData();\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [refreshData, updatePriceData]);\n\n  // Calculate price change percentage (simulated)\n  const priceChangePercent = (Math.random() * 5 - 2.5).toFixed(2);\n  const isPriceUp = parseFloat(priceChangePercent) >= 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"price-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ETH/USD Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-price-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-label\",\n          children: \"Current:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price-value\",\n          children: [\"$\", parseFloat(ethPrice).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-visualization\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-bars\",\n        children: priceHistory.map((price, index) => {\n          const height = Math.max(30, price / Math.max(...priceHistory) * 100);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-bar\",\n            style: {\n              height: `${height}%`\n            },\n            title: `$${price.toFixed(2)} at ${timeLabels[index] || ''}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"24h Change:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `stat-value ${isPriceUp ? 'positive' : 'negative'}`,\n          children: [isPriceUp ? '+' : '', priceChangePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"24h High:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [\"$\", (parseFloat(ethPrice) * 1.05).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"24h Low:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [\"$\", (parseFloat(ethPrice) * 0.95).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(PriceChart, \"6N26nBqBmeYuGBdr61oubUZxbdE=\", false, function () {\n  return [useWeb3];\n});\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useWeb3","jsxDEV","_jsxDEV","PriceChart","_s","ethPrice","refreshData","priceHistory","setPriceHistory","timeLabels","setTimeLabels","updatePriceData","prev","newHistory","parseFloat","slice","now","Date","toLocaleTimeString","hour","minute","newLabels","interval","setInterval","clearInterval","priceChangePercent","Math","random","toFixed","isPriceUp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","price","index","height","max","style","title","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/PriceChart.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/PriceChart.css';\n\nconst PriceChart = () => {\n    const { ethPrice, refreshData } = useWeb3();\n    const [priceHistory, setPriceHistory] = useState([]);\n    const [timeLabels, setTimeLabels] = useState([]);\n\n    // Simulate price data fetching with useCallback to avoid dependency issues\n    const updatePriceData = useCallback(() => {\n        // Update price history\n        setPriceHistory(prev => {\n            const newHistory = [...prev, parseFloat(ethPrice)];\n            return newHistory.slice(-10); // Keep last 10 data points\n        });\n\n        // Update time labels\n        setTimeLabels(prev => {\n            const now = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n            const newLabels = [...prev, now];\n            return newLabels.slice(-10);\n        });\n    }, [ethPrice]);\n\n    useEffect(() => {\n        // Initial update\n        updatePriceData();\n        \n        // Set up interval for regular updates\n        const interval = setInterval(() => {\n            refreshData(); // This will update ethPrice in the context\n            updatePriceData();\n        }, 5000); // Update every 5 seconds\n        \n        return () => clearInterval(interval);\n    }, [refreshData, updatePriceData]);\n\n    // Calculate price change percentage (simulated)\n    const priceChangePercent = ((Math.random() * 5) - 2.5).toFixed(2);\n    const isPriceUp = parseFloat(priceChangePercent) >= 0;\n\n    return (\n        <div className=\"price-chart-container\">\n            <div className=\"price-header\">\n                <h2>ETH/USD Price</h2>\n                <div className=\"current-price-display\">\n                    <span className=\"price-label\">Current:</span>\n                    <span className=\"price-value\">${parseFloat(ethPrice).toFixed(2)}</span>\n                </div>\n            </div>\n            \n            <div className=\"price-visualization\">\n                <div className=\"price-bars\">\n                    {priceHistory.map((price, index) => {\n                        const height = Math.max(30, (price / Math.max(...priceHistory)) * 100);\n                        return (\n                            <div \n                                key={index} \n                                className=\"price-bar\" \n                                style={{ height: `${height}%` }}\n                                title={`$${price.toFixed(2)} at ${timeLabels[index] || ''}`}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n\n            <div className=\"price-info\">\n                <div className=\"price-stat\">\n                    <span className=\"stat-label\">24h Change:</span>\n                    <span className={`stat-value ${isPriceUp ? 'positive' : 'negative'}`}>\n                        {isPriceUp ? '+' : ''}{priceChangePercent}%\n                    </span>\n                </div>\n                <div className=\"price-stat\">\n                    <span className=\"stat-label\">24h High:</span>\n                    <span className=\"stat-value\">${(parseFloat(ethPrice) * 1.05).toFixed(2)}</span>\n                </div>\n                <div className=\"price-stat\">\n                    <span className=\"stat-label\">24h Low:</span>\n                    <span className=\"stat-value\">${(parseFloat(ethPrice) * 0.95).toFixed(2)}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PriceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}