{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    connectWallet,\n    account,\n    networkId,\n    forceInitialize,\n    isInitialized\n  } = useWeb3();\n  const getNetworkName = id => {\n    switch (id) {\n      case 1:\n        return 'Ethereum Mainnet';\n      case 5:\n        return 'Goerli Testnet';\n      case 11155111:\n        return 'Sepolia Testnet';\n      case 1337:\n        return 'Local Development';\n      case 31337:\n        return 'Hardhat Network';\n      default:\n        return `Network ID: ${id}`;\n    }\n  };\n  const handleForceInitialize = async () => {\n    await forceInitialize();\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"app-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Margin Trading DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"connect-button\",\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-badge\",\n            children: networkId ? getNetworkName(networkId) : 'Unknown Network'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-address\",\n            children: [account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), !isInitialized && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleForceInitialize,\n            className: \"initialize-button\",\n            children: \"Initialize Contracts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"teH4la7cg/DyvGsVrNZ27rNd18U=\", false, function () {\n  return [useWeb3];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useWeb3","jsxDEV","_jsxDEV","Header","_s","connectWallet","account","networkId","forceInitialize","isInitialized","getNetworkName","id","handleForceInitialize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/Header.js"],"sourcesContent":["import React from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\n\nconst Header = () => {\n    const { connectWallet, account, networkId, forceInitialize, isInitialized } = useWeb3();\n\n    const getNetworkName = (id) => {\n        switch(id) {\n            case 1: return 'Ethereum Mainnet';\n            case 5: return 'Goerli Testnet';\n            case 11155111: return 'Sepolia Testnet';\n            case 1337: return 'Local Development';\n            case 31337: return 'Hardhat Network';\n            default: return `Network ID: ${id}`;\n        }\n    };\n\n    const handleForceInitialize = async () => {\n        await forceInitialize();\n    };\n\n    return (\n        <header className=\"app-header\">\n            <div className=\"header-content\">\n                <h1 className=\"app-title\">Margin Trading DApp</h1>\n                <div className=\"connection-status\">\n                    {!account ? (\n                        <button onClick={connectWallet} className=\"connect-button\">\n                            Connect Wallet\n                        </button>\n                    ) : (\n                        <div className=\"account-info\">\n                            <div className=\"network-badge\">\n                                {networkId ? getNetworkName(networkId) : 'Unknown Network'}\n                            </div>\n                            <div className=\"account-address\">\n                                {account.slice(0, 6)}...{account.slice(-4)}\n                            </div>\n                            {!isInitialized && (\n                                <button \n                                    onClick={handleForceInitialize} \n                                    className=\"initialize-button\"\n                                >\n                                    Initialize Contracts\n                                </button>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,aAAa;IAAEC,OAAO;IAAEC,SAAS;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAAGT,OAAO,CAAC,CAAC;EAEvF,MAAMU,cAAc,GAAIC,EAAE,IAAK;IAC3B,QAAOA,EAAE;MACL,KAAK,CAAC;QAAE,OAAO,kBAAkB;MACjC,KAAK,CAAC;QAAE,OAAO,gBAAgB;MAC/B,KAAK,QAAQ;QAAE,OAAO,iBAAiB;MACvC,KAAK,IAAI;QAAE,OAAO,mBAAmB;MACrC,KAAK,KAAK;QAAE,OAAO,iBAAiB;MACpC;QAAS,OAAO,eAAeA,EAAE,EAAE;IACvC;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMJ,eAAe,CAAC,CAAC;EAC3B,CAAC;EAED,oBACIN,OAAA;IAAQW,SAAS,EAAC,YAAY;IAAAC,QAAA,eAC1BZ,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BZ,OAAA;QAAIW,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDhB,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC7B,CAACR,OAAO,gBACLJ,OAAA;UAAQiB,OAAO,EAAEd,aAAc;UAACQ,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAEThB,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBZ,OAAA;YAAKW,SAAS,EAAC,eAAe;YAAAC,QAAA,EACzBP,SAAS,GAAGG,cAAc,CAACH,SAAS,CAAC,GAAG;UAAiB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,eACNhB,OAAA;YAAKW,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAC3BR,OAAO,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,KAAG,EAACd,OAAO,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,EACL,CAACT,aAAa,iBACXP,OAAA;YACIiB,OAAO,EAAEP,qBAAsB;YAC/BC,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAChC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACd,EAAA,CAjDID,MAAM;EAAA,QACsEH,OAAO;AAAA;AAAAqB,EAAA,GADnFlB,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}