{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTKARSH\\\\MarginTrading_Testing\\\\frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    connectWallet,\n    account,\n    networkId,\n    forceInitialize,\n    isInitialized,\n    loading,\n    error\n  } = useWeb3();\n  const [connecting, setConnecting] = useState(false);\n  const [connectionError, setConnectionError] = useState(null);\n  const getNetworkName = id => {\n    switch (id) {\n      case 1:\n        return 'Ethereum Mainnet';\n      case 5:\n        return 'Goerli Testnet';\n      case 11155111:\n        return 'Sepolia Testnet';\n      case 1337:\n        return 'Local Development';\n      case 31337:\n        return 'Hardhat Network';\n      default:\n        return `Network ID: ${id}`;\n    }\n  };\n  const handleConnectWallet = async () => {\n    try {\n      setConnecting(true);\n      setConnectionError(null);\n      const success = await connectWallet();\n      if (!success) {\n        setConnectionError(\"Failed to connect wallet. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error connecting wallet:\", error);\n      setConnectionError(error.message || \"Failed to connect wallet\");\n    } finally {\n      setConnecting(false);\n    }\n  };\n  const handleForceInitialize = async () => {\n    try {\n      setConnecting(true);\n      setConnectionError(null);\n      const success = await forceInitialize();\n      if (!success) {\n        setConnectionError(\"Failed to initialize contracts. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error initializing contracts:\", error);\n      setConnectionError(error.message || \"Failed to initialize contracts\");\n    } finally {\n      setConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"app-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Margin Trading DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: !account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-connection\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConnectWallet,\n            className: \"connect-button\",\n            disabled: connecting || loading,\n            children: connecting ? \"Connecting...\" : \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), connectionError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message small\",\n            children: connectionError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 49\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message small\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-badge\",\n            children: networkId ? getNetworkName(networkId) : 'Unknown Network'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-address\",\n            children: [account.slice(0, 6), \"...\", account.slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), !isInitialized && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"initialize-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleForceInitialize,\n              className: \"initialize-button\",\n              disabled: connecting,\n              children: connecting ? \"Initializing...\" : \"Initialize Contracts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), connectionError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message small\",\n              children: connectionError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), isInitialized && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-badge success\",\n            children: \"Connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"eFa7wQmpjdiFDe6iZJ5b69xp8lo=\", false, function () {\n  return [useWeb3];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useWeb3","jsxDEV","_jsxDEV","Header","_s","connectWallet","account","networkId","forceInitialize","isInitialized","loading","error","connecting","setConnecting","connectionError","setConnectionError","getNetworkName","id","handleConnectWallet","success","console","message","handleForceInitialize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","slice","_c","$RefreshReg$"],"sources":["C:/Users/UTKARSH/MarginTrading_Testing/frontend/src/components/Header.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWeb3 } from '../context/Web3Context';\nimport '../styles/Header.css';\n\nconst Header = () => {\n    const { connectWallet, account, networkId, forceInitialize, isInitialized, loading, error } = useWeb3();\n    const [connecting, setConnecting] = useState(false);\n    const [connectionError, setConnectionError] = useState(null);\n\n    const getNetworkName = (id) => {\n        switch(id) {\n            case 1: return 'Ethereum Mainnet';\n            case 5: return 'Goerli Testnet';\n            case 11155111: return 'Sepolia Testnet';\n            case 1337: return 'Local Development';\n            case 31337: return 'Hardhat Network';\n            default: return `Network ID: ${id}`;\n        }\n    };\n\n    const handleConnectWallet = async () => {\n        try {\n            setConnecting(true);\n            setConnectionError(null);\n            const success = await connectWallet();\n            if (!success) {\n                setConnectionError(\"Failed to connect wallet. Please try again.\");\n            }\n        } catch (error) {\n            console.error(\"Error connecting wallet:\", error);\n            setConnectionError(error.message || \"Failed to connect wallet\");\n        } finally {\n            setConnecting(false);\n        }\n    };\n\n    const handleForceInitialize = async () => {\n        try {\n            setConnecting(true);\n            setConnectionError(null);\n            const success = await forceInitialize();\n            if (!success) {\n                setConnectionError(\"Failed to initialize contracts. Please try again.\");\n            }\n        } catch (error) {\n            console.error(\"Error initializing contracts:\", error);\n            setConnectionError(error.message || \"Failed to initialize contracts\");\n        } finally {\n            setConnecting(false);\n        }\n    };\n\n    return (\n        <header className=\"app-header\">\n            <div className=\"header-content\">\n                <h1 className=\"app-title\">Margin Trading DApp</h1>\n                <div className=\"connection-status\">\n                    {!account ? (\n                        <div className=\"wallet-connection\">\n                            <button \n                                onClick={handleConnectWallet} \n                                className=\"connect-button\"\n                                disabled={connecting || loading}\n                            >\n                                {connecting ? \"Connecting...\" : \"Connect Wallet\"}\n                            </button>\n                            {connectionError && <p className=\"error-message small\">{connectionError}</p>}\n                            {error && <p className=\"error-message small\">{error}</p>}\n                        </div>\n                    ) : (\n                        <div className=\"account-info\">\n                            <div className=\"network-badge\">\n                                {networkId ? getNetworkName(networkId) : 'Unknown Network'}\n                            </div>\n                            <div className=\"account-address\">\n                                {account.slice(0, 6)}...{account.slice(-4)}\n                            </div>\n                            {!isInitialized && (\n                                <div className=\"initialize-container\">\n                                    <button \n                                        onClick={handleForceInitialize} \n                                        className=\"initialize-button\"\n                                        disabled={connecting}\n                                    >\n                                        {connecting ? \"Initializing...\" : \"Initialize Contracts\"}\n                                    </button>\n                                    {connectionError && <p className=\"error-message small\">{connectionError}</p>}\n                                </div>\n                            )}\n                            {isInitialized && (\n                                <div className=\"connection-badge success\">\n                                    Connected\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}